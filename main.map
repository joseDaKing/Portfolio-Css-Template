{
	"version": 3,
	"file": "sass/main.css",
	"sources": [
		"sass/main.scss",
		"sass/1-abstracts/_1-index.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/_bourbon.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/settings/_prefixer.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/settings/_px-to-em.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/settings/_asset-pipeline.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/functions/_assign-inputs.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/functions/_contains.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/functions/_contains-falsy.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/functions/_is-length.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/functions/_is-light.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/functions/_is-number.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/functions/_is-size.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/functions/_px-to-em.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/functions/_px-to-rem.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/functions/_shade.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/functions/_strip-units.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/functions/_tint.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/functions/_transition-property-name.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/functions/_unpack.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/functions/_modular-scale.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/helpers/_convert-units.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/helpers/_directional-values.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/helpers/_font-source-declaration.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/helpers/_gradient-positions-parser.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/helpers/_linear-angle-parser.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/helpers/_linear-gradient-parser.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/helpers/_linear-positions-parser.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/helpers/_linear-side-corner-parser.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/helpers/_radial-arg-parser.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/helpers/_radial-positions-parser.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/helpers/_radial-gradient-parser.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/helpers/_render-gradients.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/helpers/_shape-size-stripper.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/helpers/_str-to-num.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_animation.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_appearance.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_backface-visibility.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_background.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_background-image.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_border-image.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_calc.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_columns.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_filter.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_flex-box.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_font-face.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_font-feature-settings.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_hidpi-media-query.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_hyphens.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_image-rendering.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_keyframes.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_linear-gradient.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_perspective.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_placeholder.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_radial-gradient.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_selection.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_text-decoration.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_transform.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_transition.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/css3/_user-select.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/addons/_border-color.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/addons/_border-radius.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/addons/_border-style.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/addons/_border-width.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/addons/_buttons.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/addons/_clearfix.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/addons/_ellipsis.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/addons/_font-stacks.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/addons/_hide-text.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/addons/_margin.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/addons/_padding.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/addons/_position.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/addons/_prefixer.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/addons/_retina-image.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/addons/_size.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/addons/_text-inputs.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/addons/_timing-functions.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/addons/_triangle.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/addons/_word-wrap.scss",
		"../../../../Downloads/Program/Scout-App/bower_components/bourbon/app/assets/stylesheets/_bourbon-deprecated-upcoming.scss",
		"sass/1-abstracts/_2-colors.scss",
		"sass/1-abstracts/_3-functions.scss",
		"sass/1-abstracts/_4-variables.scss",
		"sass/1-abstracts/_5-mixins.scss",
		"sass/2-base/_1-index.scss",
		"sass/2-base/_2-reset.scss",
		"sass/2-base/_3-base.scss",
		"sass/2-base/_4-utilities.scss",
		"sass/2-base/_5-typography.scss",
		"sass/2-base/_6-animations.scss",
		"sass/3-components/_1-index.scss",
		"sass/3-components/_brand.scss",
		"sass/3-components/_section.scss",
		"sass/3-components/_img-box.scss",
		"sass/3-components/_skill-card.scss",
		"sass/3-components/_project-card.scss",
		"sass/3-components/_button.scss",
		"sass/3-components/_text-input.scss",
		"sass/3-components/_text-area.scss",
		"sass/3-components/_social.scss",
		"sass/4-layouts/_1-index.scss",
		"sass/4-layouts/_2-navbar.scss",
		"sass/4-layouts/_3-sidebar.scss",
		"sass/4-layouts/_4-projects.scss",
		"sass/4-layouts/_5-form.scss",
		"sass/4-layouts/_6-footer.scss"
	],
	"sourcesContent": [
		"@import \"1-abstracts/1-index\";\r\n@import \"2-base/1-index\";\r\n@import \"3-components/1-index\";\r\n@import \"4-layouts/1-index\";",
		"@import \"bourbon\";\r\n@import \"2-colors\";\r\n@import \"3-functions\";\r\n@import \"4-variables\";\r\n@import \"5-mixins\";",
		"// Bourbon 4.2.7\r\n// http://bourbon.io\r\n// Copyright 2011-2015 thoughtbot, inc.\r\n// MIT License\r\n\r\n@import \"settings/prefixer\";\r\n@import \"settings/px-to-em\";\r\n@import \"settings/asset-pipeline\";\r\n\r\n@import \"functions/assign-inputs\";\r\n@import \"functions/contains\";\r\n@import \"functions/contains-falsy\";\r\n@import \"functions/is-length\";\r\n@import \"functions/is-light\";\r\n@import \"functions/is-number\";\r\n@import \"functions/is-size\";\r\n@import \"functions/px-to-em\";\r\n@import \"functions/px-to-rem\";\r\n@import \"functions/shade\";\r\n@import \"functions/strip-units\";\r\n@import \"functions/tint\";\r\n@import \"functions/transition-property-name\";\r\n@import \"functions/unpack\";\r\n@import \"functions/modular-scale\";\r\n\r\n@import \"helpers/convert-units\";\r\n@import \"helpers/directional-values\";\r\n@import \"helpers/font-source-declaration\";\r\n@import \"helpers/gradient-positions-parser\";\r\n@import \"helpers/linear-angle-parser\";\r\n@import \"helpers/linear-gradient-parser\";\r\n@import \"helpers/linear-positions-parser\";\r\n@import \"helpers/linear-side-corner-parser\";\r\n@import \"helpers/radial-arg-parser\";\r\n@import \"helpers/radial-positions-parser\";\r\n@import \"helpers/radial-gradient-parser\";\r\n@import \"helpers/render-gradients\";\r\n@import \"helpers/shape-size-stripper\";\r\n@import \"helpers/str-to-num\";\r\n\r\n@import \"css3/animation\";\r\n@import \"css3/appearance\";\r\n@import \"css3/backface-visibility\";\r\n@import \"css3/background\";\r\n@import \"css3/background-image\";\r\n@import \"css3/border-image\";\r\n@import \"css3/calc\";\r\n@import \"css3/columns\";\r\n@import \"css3/filter\";\r\n@import \"css3/flex-box\";\r\n@import \"css3/font-face\";\r\n@import \"css3/font-feature-settings\";\r\n@import \"css3/hidpi-media-query\";\r\n@import \"css3/hyphens\";\r\n@import \"css3/image-rendering\";\r\n@import \"css3/keyframes\";\r\n@import \"css3/linear-gradient\";\r\n@import \"css3/perspective\";\r\n@import \"css3/placeholder\";\r\n@import \"css3/radial-gradient\";\r\n@import \"css3/selection\";\r\n@import \"css3/text-decoration\";\r\n@import \"css3/transform\";\r\n@import \"css3/transition\";\r\n@import \"css3/user-select\";\r\n\r\n@import \"addons/border-color\";\r\n@import \"addons/border-radius\";\r\n@import \"addons/border-style\";\r\n@import \"addons/border-width\";\r\n@import \"addons/buttons\";\r\n@import \"addons/clearfix\";\r\n@import \"addons/ellipsis\";\r\n@import \"addons/font-stacks\";\r\n@import \"addons/hide-text\";\r\n@import \"addons/margin\";\r\n@import \"addons/padding\";\r\n@import \"addons/position\";\r\n@import \"addons/prefixer\";\r\n@import \"addons/retina-image\";\r\n@import \"addons/size\";\r\n@import \"addons/text-inputs\";\r\n@import \"addons/timing-functions\";\r\n@import \"addons/triangle\";\r\n@import \"addons/word-wrap\";\r\n\r\n@import \"bourbon-deprecated-upcoming\";\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Global variables to enable or disable vendor prefixes\r\n\r\n$prefix-for-webkit:    true !default;\r\n$prefix-for-mozilla:   true !default;\r\n$prefix-for-microsoft: true !default;\r\n$prefix-for-opera:     true !default;\r\n$prefix-for-spec:      true !default;\r\n",
		"$em-base: 16px !default;\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// A global setting to enable or disable the `$asset-pipeline` variable for all functions that accept it.\r\n///\r\n/// @type Bool\r\n\r\n$asset-pipeline: false !default;\r\n",
		"@function assign-inputs($inputs, $pseudo: null) {\r\n  $list: ();\r\n\r\n  @each $input in $inputs {\r\n    $input: unquote($input);\r\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\r\n    $list: append($list, $input, comma);\r\n  }\r\n\r\n  @return $list;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Checks if a list contains a value(s).\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list\r\n///   The list to check against.\r\n///\r\n/// @param {List} $values\r\n///   A single value or list of values to check for.\r\n///\r\n/// @example scss - Usage\r\n///   contains($list, $value)\r\n///\r\n/// @return {Bool}\r\n\r\n@function contains($list, $values...) {\r\n  @each $value in $values {\r\n    @if type-of(index($list, $value)) != \"number\" {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Checks if a list does not contains a value.\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list\r\n///   The list to check against.\r\n///\r\n/// @return {Bool}\r\n\r\n@function contains-falsy($list) {\r\n  @each $item in $list {\r\n    @if not $item {\r\n      @return true;\r\n    }\r\n  }\r\n\r\n  @return false;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Checks for a valid CSS length.\r\n///\r\n/// @param {String} $value\r\n\r\n@function is-length($value) {\r\n  @return type-of($value) != \"null\" and (str-slice($value + \"\", 1, 4) == \"calc\"\r\n       or index(auto inherit initial 0, $value)\r\n       or (type-of($value) == \"number\" and not(unitless($value))));\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Programatically determines whether a color is light or dark.\r\n///\r\n/// @link http://robots.thoughtbot.com/closer-look-color-lightness\r\n///\r\n/// @param {Color (Hex)} $color\r\n///\r\n/// @example scss - Usage\r\n///   is-light($color)\r\n///\r\n/// @return {Bool}\r\n\r\n@function is-light($hex-color) {\r\n  $-local-red: red(rgba($hex-color, 1));\r\n  $-local-green: green(rgba($hex-color, 1));\r\n  $-local-blue: blue(rgba($hex-color, 1));\r\n  $-local-lightness: ($-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722) / 255;\r\n\r\n  @return $-local-lightness > 0.6;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Checks for a valid number.\r\n///\r\n/// @param {Number} $value\r\n///\r\n/// @require {function} contains\r\n\r\n@function is-number($value) {\r\n  @return contains(\"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" 0 1 2 3 4 5 6 7 8 9, $value);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Checks for a valid CSS size.\r\n///\r\n/// @param {String} $value\r\n///\r\n/// @require {function} contains\r\n/// @require {function} is-length\r\n\r\n@function is-size($value) {\r\n  @return is-length($value)\r\n          or contains(\"fill\" \"fit-content\" \"min-content\" \"max-content\", $value);\r\n}\r\n",
		"// Convert pixels to ems\r\n// eg. for a relational value of 12px write em(12) when the parent is 16px\r\n// if the parent is another value say 24px write em(12, 24)\r\n\r\n@function em($pxval, $base: $em-base) {\r\n  @if not unitless($pxval) {\r\n    $pxval: strip-units($pxval);\r\n  }\r\n  @if not unitless($base) {\r\n    $base: strip-units($base);\r\n  }\r\n  @return ($pxval / $base) * 1em;\r\n}\r\n",
		"// Convert pixels to rems\r\n// eg. for a relational value of 12px write rem(12)\r\n// Assumes $em-base is the font-size of <html>\r\n\r\n@function rem($pxval) {\r\n  @if not unitless($pxval) {\r\n    $pxval: strip-units($pxval);\r\n  }\r\n\r\n  $base: $em-base;\r\n  @if not unitless($base) {\r\n    $base: strip-units($base);\r\n  }\r\n  @return ($pxval / $base) * 1rem;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Mixes a color with black.\r\n///\r\n/// @param {Color} $color\r\n///\r\n/// @param {Number (Percentage)} $percent\r\n///   The amount of black to be mixed in.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     background-color: shade(#ffbb52, 60%);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     background-color: #664a20;\r\n///   }\r\n///\r\n/// @return {Color}\r\n\r\n@function shade($color, $percent) {\r\n  @return mix(#000, $color, $percent);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Strips the unit from a number.\r\n///\r\n/// @param {Number (With Unit)} $value\r\n///\r\n/// @example scss - Usage\r\n///   $dimension: strip-units(10em);\r\n///\r\n/// @example css - CSS Output\r\n///   $dimension: 10;\r\n///\r\n/// @return {Number (Unitless)}\r\n\r\n@function strip-units($value) {\r\n  @return ($value / ($value * 0 + 1));\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Mixes a color with white.\r\n///\r\n/// @param {Color} $color\r\n///\r\n/// @param {Number (Percentage)} $percent\r\n///   The amount of white to be mixed in.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     background-color: tint(#6ecaa6, 40%);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     background-color: #a8dfc9;\r\n///   }\r\n///\r\n/// @return {Color}\r\n\r\n@function tint($color, $percent) {\r\n  @return mix(#fff, $color, $percent);\r\n}\r\n",
		"// Return vendor-prefixed property names if appropriate\r\n// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background\r\n//************************************************************************//\r\n@function transition-property-names($props, $vendor: false) {\r\n  $new-props: ();\r\n\r\n  @each $prop in $props {\r\n    $new-props: append($new-props, transition-property-name($prop, $vendor), comma);\r\n  }\r\n\r\n  @return $new-props;\r\n}\r\n\r\n@function transition-property-name($prop, $vendor: false) {\r\n  // put other properties that need to be prefixed here aswell\r\n  @if $vendor and $prop == transform {\r\n    @return unquote('-'+$vendor+'-'+$prop);\r\n  }\r\n  @else {\r\n    @return $prop;\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Converts shorthand to the 4-value syntax.\r\n///\r\n/// @param {List} $shorthand\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     margin: unpack(1em 2em);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     margin: 1em 2em 1em 2em;\r\n///   }\r\n\r\n@function unpack($shorthand) {\r\n  @if length($shorthand) == 1 {\r\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\r\n  } @else if length($shorthand) == 2 {\r\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\r\n  } @else if length($shorthand) == 3 {\r\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\r\n  } @else {\r\n    @return $shorthand;\r\n  }\r\n}\r\n",
		"// Scaling Variables\r\n$golden:           1.618;\r\n$minor-second:     1.067;\r\n$major-second:     1.125;\r\n$minor-third:      1.2;\r\n$major-third:      1.25;\r\n$perfect-fourth:   1.333;\r\n$augmented-fourth: 1.414;\r\n$perfect-fifth:    1.5;\r\n$minor-sixth:      1.6;\r\n$major-sixth:      1.667;\r\n$minor-seventh:    1.778;\r\n$major-seventh:    1.875;\r\n$octave:           2;\r\n$major-tenth:      2.5;\r\n$major-eleventh:   2.667;\r\n$major-twelfth:    3;\r\n$double-octave:    4;\r\n\r\n$modular-scale-ratio: $perfect-fourth !default;\r\n$modular-scale-base: em($em-base) !default;\r\n\r\n@function modular-scale($increment, $value: $modular-scale-base, $ratio: $modular-scale-ratio) {\r\n  $v1: nth($value, 1);\r\n  $v2: nth($value, length($value));\r\n  $value: $v1;\r\n\r\n  // scale $v2 to just above $v1\r\n  @while $v2 > $v1 {\r\n    $v2: ($v2 / $ratio); // will be off-by-1\r\n  }\r\n  @while $v2 < $v1 {\r\n    $v2: ($v2 * $ratio); // will fix off-by-1\r\n  }\r\n\r\n  // check AFTER scaling $v2 to prevent double-counting corner-case\r\n  $double-stranded: $v2 > $v1;\r\n\r\n  @if $increment > 0 {\r\n    @for $i from 1 through $increment {\r\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\r\n        $value: $v2;\r\n        $v2: ($v2 * $ratio);\r\n      } @else {\r\n        $v1: ($v1 * $ratio);\r\n        $value: $v1;\r\n      }\r\n    }\r\n  }\r\n\r\n  @if $increment < 0 {\r\n    // adjust $v2 to just below $v1\r\n    @if $double-stranded {\r\n      $v2: ($v2 / $ratio);\r\n    }\r\n\r\n    @for $i from $increment through -1 {\r\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\r\n        $value: $v2;\r\n        $v2: ($v2 / $ratio);\r\n      } @else {\r\n        $v1: ($v1 / $ratio);\r\n        $value: $v1;\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $value;\r\n}\r\n",
		"//************************************************************************//\r\n// Helper function for str-to-num fn.\r\n// Source: http://sassmeister.com/gist/9647408\r\n//************************************************************************//\r\n@function _convert-units($number, $unit) {\r\n  $strings: \"px\", \"cm\", \"mm\", \"%\", \"ch\", \"pica\", \"in\", \"em\", \"rem\", \"pt\", \"pc\", \"ex\", \"vw\", \"vh\", \"vmin\", \"vmax\", \"deg\", \"rad\", \"grad\", \"turn\";\r\n  $units:   1px, 1cm, 1mm, 1%, 1ch, 1pica, 1in, 1em, 1rem, 1pt, 1pc, 1ex, 1vw, 1vh, 1vmin, 1vmax, 1deg, 1rad, 1grad, 1turn;\r\n  $index: index($strings, $unit);\r\n\r\n  @if not $index {\r\n    @warn \"Unknown unit `#{$unit}`.\";\r\n    @return false;\r\n  }\r\n\r\n  @if type-of($number) != \"number\" {\r\n    @warn \"`#{$number} is not a number`\";\r\n    @return false;\r\n  }\r\n\r\n  @return $number * nth($units, $index);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Directional-property mixins are shorthands for writing properties like the following\r\n///\r\n/// @ignore You can also use `false` instead of `null`.\r\n///\r\n/// @param {List} $vals\r\n///   List of directional values\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include border-style(dotted null);\r\n///     @include margin(null 0 10px);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     border-bottom-style: dotted;\r\n///     border-top-style: dotted;\r\n///     margin-bottom: 10px;\r\n///     margin-left: 0;\r\n///     margin-right: 0;\r\n///   }\r\n///\r\n/// @require {function} contains-falsy\r\n///\r\n/// @return {List}\r\n\r\n@function collapse-directionals($vals) {\r\n  $output: null;\r\n\r\n  $a: nth($vals, 1);\r\n  $b: if(length($vals) < 2, $a, nth($vals, 2));\r\n  $c: if(length($vals) < 3, $a, nth($vals, 3));\r\n  $d: if(length($vals) < 2, $a, nth($vals, if(length($vals) < 4, 2, 4)));\r\n\r\n  @if $a == 0 { $a: 0; }\r\n  @if $b == 0 { $b: 0; }\r\n  @if $c == 0 { $c: 0; }\r\n  @if $d == 0 { $d: 0; }\r\n\r\n  @if $a == $b and $a == $c and $a == $d { $output: $a;          }\r\n  @else if $a == $c and $b == $d         { $output: $a $b;       }\r\n  @else if $b == $d                      { $output: $a $b $c;    }\r\n  @else                                  { $output: $a $b $c $d; }\r\n\r\n  @return $output;\r\n}\r\n\r\n/// Output directional properties, for instance `margin`.\r\n///\r\n/// @access private\r\n///\r\n/// @param {String} $pre\r\n///   Prefix to use\r\n/// @param {String} $suf\r\n///   Suffix to use\r\n/// @param {List} $vals\r\n///   List of values\r\n///\r\n/// @require {function} collapse-directionals\r\n/// @require {function} contains-falsy\r\n\r\n@mixin directional-property($pre, $suf, $vals) {\r\n  // Property Names\r\n  $top:    $pre + \"-top\"    + if($suf, \"-#{$suf}\", \"\");\r\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\r\n  $left:   $pre + \"-left\"   + if($suf, \"-#{$suf}\", \"\");\r\n  $right:  $pre + \"-right\"  + if($suf, \"-#{$suf}\", \"\");\r\n  $all:    $pre +             if($suf, \"-#{$suf}\", \"\");\r\n\r\n  $vals: collapse-directionals($vals);\r\n\r\n  @if contains-falsy($vals) {\r\n    @if nth($vals, 1) { #{$top}: nth($vals, 1); }\r\n\r\n    @if length($vals) == 1 {\r\n      @if nth($vals, 1) { #{$right}: nth($vals, 1); }\r\n    } @else {\r\n      @if nth($vals, 2) { #{$right}: nth($vals, 2); }\r\n    }\r\n\r\n    @if length($vals) == 2 {\r\n      @if nth($vals, 1) { #{$bottom}: nth($vals, 1); }\r\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\r\n    } @else if length($vals) == 3 {\r\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\r\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\r\n    } @else if length($vals) == 4 {\r\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\r\n      @if nth($vals, 4) { #{$left}:   nth($vals, 4); }\r\n    }\r\n  } @else {\r\n    #{$all}: $vals;\r\n  }\r\n}\r\n",
		"// Used for creating the source string for fonts using @font-face\r\n// Reference: http://goo.gl/Ru1bKP\r\n\r\n@function font-url-prefixer($asset-pipeline) {\r\n  @if $asset-pipeline == true {\r\n    @return font-url;\r\n  } @else {\r\n    @return url;\r\n  }\r\n}\r\n\r\n@function font-source-declaration(\r\n  $font-family,\r\n  $file-path,\r\n  $asset-pipeline,\r\n  $file-formats,\r\n  $font-url) {\r\n\r\n  $src: ();\r\n\r\n  $formats-map: (\r\n    eot:   \"#{$file-path}.eot?#iefix\" format(\"embedded-opentype\"),\r\n    woff2: \"#{$file-path}.woff2\" format(\"woff2\"),\r\n    woff:  \"#{$file-path}.woff\" format(\"woff\"),\r\n    ttf:   \"#{$file-path}.ttf\" format(\"truetype\"),\r\n    svg:   \"#{$file-path}.svg##{$font-family}\" format(\"svg\")\r\n  );\r\n\r\n  @each $key, $values in $formats-map {\r\n    @if contains($file-formats, $key) {\r\n      $file-path: nth($values, 1);\r\n      $font-format: nth($values, 2);\r\n\r\n      @if $asset-pipeline == true {\r\n        $src: append($src, font-url($file-path) $font-format, comma);\r\n      } @else {\r\n        $src: append($src, url($file-path) $font-format, comma);\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $src;\r\n}\r\n",
		"@function _gradient-positions-parser($gradient-type, $gradient-positions) {\r\n  @if $gradient-positions\r\n  and ($gradient-type == linear)\r\n  and (type-of($gradient-positions) != color) {\r\n    $gradient-positions: _linear-positions-parser($gradient-positions);\r\n  }\r\n  @else if $gradient-positions\r\n  and ($gradient-type == radial)\r\n  and (type-of($gradient-positions) != color) {\r\n    $gradient-positions: _radial-positions-parser($gradient-positions);\r\n  }\r\n  @return $gradient-positions;\r\n}\r\n",
		"// Private function for linear-gradient-parser\r\n@function _linear-angle-parser($image, $first-val, $prefix, $suffix) {\r\n  $offset: null;\r\n  $unit-short:  str-slice($first-val, str-length($first-val) - 2, str-length($first-val));\r\n  $unit-long:   str-slice($first-val, str-length($first-val) - 3, str-length($first-val));\r\n\r\n  @if ($unit-long == \"grad\") or\r\n      ($unit-long == \"turn\") {\r\n    $offset: if($unit-long == \"grad\", -100grad * 3, -0.75turn);\r\n  }\r\n\r\n  @else if ($unit-short == \"deg\") or\r\n           ($unit-short == \"rad\") {\r\n    $offset: if($unit-short == \"deg\", -90 * 3, 1.6rad);\r\n  }\r\n\r\n  @if $offset {\r\n    $num: _str-to-num($first-val);\r\n\r\n    @return (\r\n      webkit-image: -webkit- + $prefix + ($offset - $num) + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n}\r\n",
		"@function _linear-gradient-parser($image) {\r\n  $image: unquote($image);\r\n  $gradients: ();\r\n  $start: str-index($image, \"(\");\r\n  $end: str-index($image, \",\");\r\n  $first-val: str-slice($image, $start + 1, $end - 1);\r\n\r\n  $prefix: str-slice($image, 1, $start);\r\n  $suffix: str-slice($image, $end, str-length($image));\r\n\r\n  $has-multiple-vals: str-index($first-val, \" \");\r\n  $has-single-position: unquote(_position-flipper($first-val) + \"\");\r\n  $has-angle: is-number(str-slice($first-val, 1, 1));\r\n\r\n  @if $has-multiple-vals {\r\n    $gradients: _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals);\r\n  }\r\n\r\n  @else if $has-single-position != \"\" {\r\n    $pos: unquote($has-single-position + \"\");\r\n\r\n    $gradients: (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $prefix + \"to \" + $pos + $suffix\r\n    );\r\n  }\r\n\r\n  @else if $has-angle {\r\n    // Rotate degree for webkit\r\n    $gradients: _linear-angle-parser($image, $first-val, $prefix, $suffix);\r\n  }\r\n\r\n  @else {\r\n    $gradients: (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @return $gradients;\r\n}\r\n",
		"@function _linear-positions-parser($pos) {\r\n  $type: type-of(nth($pos, 1));\r\n  $spec: null;\r\n  $degree: null;\r\n  $side: null;\r\n  $corner: null;\r\n  $length: length($pos);\r\n  // Parse Side and corner positions\r\n  @if ($length > 1) {\r\n    @if nth($pos, 1) == \"to\" { // Newer syntax\r\n      $side: nth($pos, 2);\r\n\r\n      @if $length == 2 { // eg. to top\r\n        // Swap for backwards compatibility\r\n        $degree: _position-flipper(nth($pos, 2));\r\n      }\r\n      @else if $length == 3 { // eg. to top left\r\n        $corner: nth($pos, 3);\r\n      }\r\n    }\r\n    @else if $length == 2 { // Older syntax (\"top left\")\r\n      $side: _position-flipper(nth($pos, 1));\r\n      $corner: _position-flipper(nth($pos, 2));\r\n    }\r\n\r\n    @if (\"#{$side} #{$corner}\" == \"left top\") or (\"#{$side} #{$corner}\" == \"top left\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    @else if (\"#{$side} #{$corner}\" == \"right top\") or (\"#{$side} #{$corner}\" == \"top right\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    @else if (\"#{$side} #{$corner}\" == \"right bottom\") or (\"#{$side} #{$corner}\" == \"bottom right\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    @else if (\"#{$side} #{$corner}\" == \"left bottom\") or (\"#{$side} #{$corner}\" == \"bottom left\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    $spec: to $side $corner;\r\n  }\r\n  @else if $length == 1 {\r\n    // Swap for backwards compatibility\r\n    @if $type == string {\r\n      $degree: $pos;\r\n      $spec: to _position-flipper($pos);\r\n    }\r\n    @else {\r\n      $degree: -270 - $pos; //rotate the gradient opposite from spec\r\n      $spec: $pos;\r\n    }\r\n  }\r\n  $degree: unquote($degree + \",\");\r\n  $spec:   unquote($spec + \",\");\r\n  @return $degree $spec;\r\n}\r\n\r\n@function _position-flipper($pos) {\r\n  @return if($pos == left, right, null)\r\n         if($pos == right, left, null)\r\n         if($pos == top, bottom, null)\r\n         if($pos == bottom, top, null);\r\n}\r\n",
		"// Private function for linear-gradient-parser\r\n@function _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals) {\r\n  $val-1: str-slice($first-val, 1, $has-multiple-vals - 1);\r\n  $val-2: str-slice($first-val, $has-multiple-vals + 1, str-length($first-val));\r\n  $val-3: null;\r\n  $has-val-3: str-index($val-2, \" \");\r\n\r\n  @if $has-val-3 {\r\n    $val-3: str-slice($val-2, $has-val-3 + 1, str-length($val-2));\r\n    $val-2: str-slice($val-2, 1, $has-val-3 - 1);\r\n  }\r\n\r\n  $pos: _position-flipper($val-1) _position-flipper($val-2) _position-flipper($val-3);\r\n  $pos: unquote($pos + \"\");\r\n\r\n  // Use old spec for webkit\r\n  @if $val-1 == \"to\" {\r\n    @return (\r\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  // Bring the code up to spec\r\n  @else {\r\n    @return (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $prefix + \"to \" + $pos + $suffix\r\n    );\r\n  }\r\n}\r\n",
		"@function _radial-arg-parser($g1, $g2, $pos, $shape-size) {\r\n  @each $value in $g1, $g2 {\r\n    $first-val: nth($value, 1);\r\n    $pos-type:  type-of($first-val);\r\n    $spec-at-index: null;\r\n\r\n    // Determine if spec was passed to mixin\r\n    @if type-of($value) == list {\r\n      $spec-at-index: if(index($value, at), index($value, at), false);\r\n    }\r\n    @if $spec-at-index {\r\n      @if $spec-at-index > 1 {\r\n        @for $i from 1 through ($spec-at-index - 1) {\r\n          $shape-size: $shape-size nth($value, $i);\r\n        }\r\n        @for $i from ($spec-at-index + 1) through length($value) {\r\n          $pos: $pos nth($value, $i);\r\n        }\r\n      }\r\n      @else if $spec-at-index == 1 {\r\n        @for $i from ($spec-at-index + 1) through length($value) {\r\n          $pos: $pos nth($value, $i);\r\n        }\r\n      }\r\n      $g1: null;\r\n    }\r\n\r\n    // If not spec calculate correct values\r\n    @else {\r\n      @if ($pos-type != color) or ($first-val != \"transparent\") {\r\n        @if ($pos-type == number)\r\n        or ($first-val == \"center\")\r\n        or ($first-val == \"top\")\r\n        or ($first-val == \"right\")\r\n        or ($first-val == \"bottom\")\r\n        or ($first-val == \"left\") {\r\n\r\n          $pos: $value;\r\n\r\n          @if $pos == $g1 {\r\n            $g1: null;\r\n          }\r\n        }\r\n\r\n        @else if\r\n           ($first-val == \"ellipse\")\r\n        or ($first-val == \"circle\")\r\n        or ($first-val == \"closest-side\")\r\n        or ($first-val == \"closest-corner\")\r\n        or ($first-val == \"farthest-side\")\r\n        or ($first-val == \"farthest-corner\")\r\n        or ($first-val == \"contain\")\r\n        or ($first-val == \"cover\") {\r\n\r\n          $shape-size: $value;\r\n\r\n          @if $value == $g1 {\r\n            $g1: null;\r\n          }\r\n\r\n          @else if $value == $g2 {\r\n            $g2: null;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @return $g1, $g2, $pos, $shape-size;\r\n}\r\n",
		"@function _radial-positions-parser($gradient-pos) {\r\n  $shape-size: nth($gradient-pos, 1);\r\n  $pos:        nth($gradient-pos, 2);\r\n  $shape-size-spec: _shape-size-stripper($shape-size);\r\n\r\n  $pre-spec: unquote(if($pos, \"#{$pos}, \", null))\r\n             unquote(if($shape-size, \"#{$shape-size},\", null));\r\n  $pos-spec: if($pos, \"at #{$pos}\", null);\r\n\r\n  $spec: \"#{$shape-size-spec} #{$pos-spec}\";\r\n\r\n  // Add comma\r\n  @if ($spec != \"  \") {\r\n    $spec: \"#{$spec},\";\r\n  }\r\n\r\n  @return $pre-spec $spec;\r\n}\r\n",
		"@function _radial-gradient-parser($image) {\r\n  $image: unquote($image);\r\n  $gradients: ();\r\n  $start: str-index($image, \"(\");\r\n  $end: str-index($image, \",\");\r\n  $first-val: str-slice($image, $start + 1, $end - 1);\r\n\r\n  $prefix: str-slice($image, 1, $start);\r\n  $suffix: str-slice($image, $end, str-length($image));\r\n\r\n  $is-spec-syntax: str-index($first-val, \"at\");\r\n\r\n  @if $is-spec-syntax and $is-spec-syntax > 1 {\r\n    $keyword: str-slice($first-val, 1, $is-spec-syntax - 2);\r\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\r\n    $pos: append($pos, $keyword, comma);\r\n\r\n    $gradients: (\r\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @else if $is-spec-syntax == 1 {\r\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\r\n\r\n    $gradients: (\r\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @else if str-index($image, \"cover\") or str-index($image, \"contain\") {\r\n    @warn \"Radial-gradient needs to be updated to conform to latest spec.\";\r\n\r\n    $gradients: (\r\n      webkit-image: null,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @else {\r\n    $gradients: (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @return $gradients;\r\n}\r\n",
		"// User for linear and radial gradients within background-image or border-image properties\r\n\r\n@function _render-gradients($gradient-positions, $gradients, $gradient-type, $vendor: false) {\r\n  $pre-spec: null;\r\n  $spec: null;\r\n  $vendor-gradients: null;\r\n  @if $gradient-type == linear {\r\n    @if $gradient-positions {\r\n      $pre-spec: nth($gradient-positions, 1);\r\n      $spec:     nth($gradient-positions, 2);\r\n    }\r\n  }\r\n  @else if $gradient-type == radial {\r\n    $pre-spec: nth($gradient-positions, 1);\r\n    $spec:     nth($gradient-positions, 2);\r\n  }\r\n\r\n  @if $vendor {\r\n    $vendor-gradients: -#{$vendor}-#{$gradient-type}-gradient(#{$pre-spec} $gradients);\r\n  }\r\n  @else if $vendor == false {\r\n    $vendor-gradients: \"#{$gradient-type}-gradient(#{$spec} #{$gradients})\";\r\n    $vendor-gradients: unquote($vendor-gradients);\r\n  }\r\n  @return $vendor-gradients;\r\n}\r\n",
		"@function _shape-size-stripper($shape-size) {\r\n  $shape-size-spec: null;\r\n  @each $value in $shape-size {\r\n    @if ($value == \"cover\") or ($value == \"contain\") {\r\n      $value: null;\r\n    }\r\n    $shape-size-spec: \"#{$shape-size-spec} #{$value}\";\r\n  }\r\n  @return $shape-size-spec;\r\n}\r\n",
		"//************************************************************************//\r\n// Helper function for linear/radial-gradient-parsers.\r\n// Source: http://sassmeister.com/gist/9647408\r\n//************************************************************************//\r\n@function _str-to-num($string) {\r\n  // Matrices\r\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\r\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\r\n\r\n  // Result\r\n  $result: 0;\r\n  $divider: 0;\r\n  $minus: false;\r\n\r\n  // Looping through all characters\r\n  @for $i from 1 through str-length($string) {\r\n    $character: str-slice($string, $i, $i);\r\n    $index: index($strings, $character);\r\n\r\n    @if $character == \"-\" {\r\n      $minus: true;\r\n    }\r\n\r\n    @else if $character == \".\" {\r\n      $divider: 1;\r\n    }\r\n\r\n    @else {\r\n      @if not $index {\r\n        $result: if($minus, $result * -1, $result);\r\n        @return _convert-units($result, str-slice($string, $i));\r\n      }\r\n\r\n      $number: nth($numbers, $index);\r\n\r\n      @if $divider == 0 {\r\n        $result: $result * 10;\r\n      }\r\n\r\n      @else {\r\n        // Move the decimal dot to the left\r\n        $divider: $divider * 10;\r\n        $number: $number / $divider;\r\n      }\r\n\r\n      $result: $result + $number;\r\n    }\r\n  }\r\n  @return if($minus, $result * -1, $result);\r\n}\r\n",
		"// http://www.w3.org/TR/css3-animations/#the-animation-name-property-\r\n// Each of these mixins support comma separated lists of values, which allows different transitions for individual properties to be described in a single style rule. Each value in the list corresponds to the value at that same position in the other properties.\r\n\r\n@mixin animation($animations...) {\r\n  @include prefixer(animation, $animations, webkit moz spec);\r\n}\r\n\r\n@mixin animation-name($names...) {\r\n  @include prefixer(animation-name, $names, webkit moz spec);\r\n}\r\n\r\n@mixin animation-duration($times...) {\r\n  @include prefixer(animation-duration, $times, webkit moz spec);\r\n}\r\n\r\n@mixin animation-timing-function($motions...) {\r\n  // ease | linear | ease-in | ease-out | ease-in-out\r\n  @include prefixer(animation-timing-function, $motions, webkit moz spec);\r\n}\r\n\r\n@mixin animation-iteration-count($values...) {\r\n  // infinite | <number>\r\n  @include prefixer(animation-iteration-count, $values, webkit moz spec);\r\n}\r\n\r\n@mixin animation-direction($directions...) {\r\n  // normal | alternate\r\n  @include prefixer(animation-direction, $directions, webkit moz spec);\r\n}\r\n\r\n@mixin animation-play-state($states...) {\r\n  // running | paused\r\n  @include prefixer(animation-play-state, $states, webkit moz spec);\r\n}\r\n\r\n@mixin animation-delay($times...) {\r\n  @include prefixer(animation-delay, $times, webkit moz spec);\r\n}\r\n\r\n@mixin animation-fill-mode($modes...) {\r\n  // none | forwards | backwards | both\r\n  @include prefixer(animation-fill-mode, $modes, webkit moz spec);\r\n}\r\n",
		"@mixin appearance($value) {\r\n  @include prefixer(appearance, $value, webkit moz ms o spec);\r\n}\r\n",
		"@mixin backface-visibility($visibility) {\r\n  @include prefixer(backface-visibility, $visibility, webkit spec);\r\n}\r\n",
		"//************************************************************************//\r\n// Background property for adding multiple backgrounds using shorthand\r\n// notation.\r\n//************************************************************************//\r\n\r\n@mixin background($backgrounds...) {\r\n  $webkit-backgrounds: ();\r\n  $spec-backgrounds: ();\r\n\r\n  @each $background in $backgrounds {\r\n    $webkit-background: ();\r\n    $spec-background: ();\r\n    $background-type: type-of($background);\r\n\r\n    @if $background-type == string or $background-type == list {\r\n      $background-str: if($background-type == list, nth($background, 1), $background);\r\n\r\n      $url-str:       str-slice($background-str, 1, 3);\r\n      $gradient-type: str-slice($background-str, 1, 6);\r\n\r\n      @if $url-str == \"url\" {\r\n        $webkit-background: $background;\r\n        $spec-background:   $background;\r\n      }\r\n\r\n      @else if $gradient-type == \"linear\" {\r\n        $gradients: _linear-gradient-parser(\"#{$background}\");\r\n        $webkit-background: map-get($gradients, webkit-image);\r\n        $spec-background:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else if $gradient-type == \"radial\" {\r\n        $gradients: _radial-gradient-parser(\"#{$background}\");\r\n        $webkit-background: map-get($gradients, webkit-image);\r\n        $spec-background:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else {\r\n        $webkit-background: $background;\r\n        $spec-background:   $background;\r\n      }\r\n    }\r\n\r\n    @else {\r\n      $webkit-background: $background;\r\n      $spec-background:   $background;\r\n    }\r\n\r\n    $webkit-backgrounds: append($webkit-backgrounds, $webkit-background, comma);\r\n    $spec-backgrounds:   append($spec-backgrounds,   $spec-background,   comma);\r\n  }\r\n\r\n  background: $webkit-backgrounds;\r\n  background: $spec-backgrounds;\r\n}\r\n",
		"//************************************************************************//\r\n// Background-image property for adding multiple background images with\r\n// gradients, or for stringing multiple gradients together.\r\n//************************************************************************//\r\n\r\n@mixin background-image($images...) {\r\n  $webkit-images: ();\r\n  $spec-images: ();\r\n\r\n  @each $image in $images {\r\n    $webkit-image: ();\r\n    $spec-image: ();\r\n\r\n    @if (type-of($image) == string) {\r\n      $url-str:       str-slice($image, 1, 3);\r\n      $gradient-type: str-slice($image, 1, 6);\r\n\r\n      @if $url-str == \"url\" {\r\n        $webkit-image: $image;\r\n        $spec-image:   $image;\r\n      }\r\n\r\n      @else if $gradient-type == \"linear\" {\r\n        $gradients: _linear-gradient-parser($image);\r\n        $webkit-image:  map-get($gradients, webkit-image);\r\n        $spec-image:    map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else if $gradient-type == \"radial\" {\r\n        $gradients: _radial-gradient-parser($image);\r\n        $webkit-image: map-get($gradients, webkit-image);\r\n        $spec-image:   map-get($gradients, spec-image);\r\n      }\r\n    }\r\n\r\n    $webkit-images: append($webkit-images, $webkit-image, comma);\r\n    $spec-images:   append($spec-images,   $spec-image,   comma);\r\n  }\r\n\r\n  background-image: $webkit-images;\r\n  background-image: $spec-images;\r\n}\r\n",
		"@mixin border-image($borders...) {\r\n  $webkit-borders: ();\r\n  $spec-borders: ();\r\n\r\n  @each $border in $borders {\r\n    $webkit-border: ();\r\n    $spec-border: ();\r\n    $border-type: type-of($border);\r\n\r\n    @if $border-type == string or list {\r\n      $border-str: if($border-type == list, nth($border, 1), $border);\r\n\r\n      $url-str:       str-slice($border-str, 1, 3);\r\n      $gradient-type: str-slice($border-str, 1, 6);\r\n\r\n      @if $url-str == \"url\" {\r\n        $webkit-border: $border;\r\n        $spec-border:   $border;\r\n      }\r\n\r\n      @else if $gradient-type == \"linear\" {\r\n        $gradients: _linear-gradient-parser(\"#{$border}\");\r\n        $webkit-border: map-get($gradients, webkit-image);\r\n        $spec-border:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else if $gradient-type == \"radial\" {\r\n        $gradients: _radial-gradient-parser(\"#{$border}\");\r\n        $webkit-border: map-get($gradients, webkit-image);\r\n        $spec-border:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else {\r\n        $webkit-border: $border;\r\n        $spec-border:   $border;\r\n      }\r\n    }\r\n\r\n    @else {\r\n      $webkit-border: $border;\r\n      $spec-border:   $border;\r\n    }\r\n\r\n    $webkit-borders: append($webkit-borders, $webkit-border, comma);\r\n    $spec-borders:   append($spec-borders,   $spec-border,   comma);\r\n  }\r\n\r\n  -webkit-border-image: $webkit-borders;\r\n          border-image: $spec-borders;\r\n          border-style: solid;\r\n}\r\n\r\n//Examples:\r\n// @include border-image(url(\"image.png\"));\r\n// @include border-image(url(\"image.png\") 20 stretch);\r\n// @include border-image(linear-gradient(45deg, orange, yellow));\r\n// @include border-image(linear-gradient(45deg, orange, yellow) stretch);\r\n// @include border-image(linear-gradient(45deg, orange, yellow) 20 30 40 50 stretch round);\r\n// @include border-image(radial-gradient(top, cover, orange, yellow, orange));\r\n",
		"@mixin calc($property, $value) {\r\n  #{$property}: -webkit-calc(#{$value});\r\n  #{$property}: calc(#{$value});\r\n}\r\n",
		"@mixin columns($arg: auto) {\r\n  // <column-count> || <column-width>\r\n  @include prefixer(columns, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-count($int: auto) {\r\n  // auto || integer\r\n  @include prefixer(column-count, $int, webkit moz spec);\r\n}\r\n\r\n@mixin column-gap($length: normal) {\r\n  // normal || length\r\n  @include prefixer(column-gap, $length, webkit moz spec);\r\n}\r\n\r\n@mixin column-fill($arg: auto) {\r\n  // auto || length\r\n  @include prefixer(column-fill, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule($arg) {\r\n  // <border-width> || <border-style> || <color>\r\n  @include prefixer(column-rule, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule-color($color) {\r\n  @include prefixer(column-rule-color, $color, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule-style($style: none) {\r\n  // none | hidden | dashed | dotted | double | groove | inset | inset | outset | ridge | solid\r\n  @include prefixer(column-rule-style, $style, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule-width ($width: none) {\r\n  @include prefixer(column-rule-width, $width, webkit moz spec);\r\n}\r\n\r\n@mixin column-span($arg: none) {\r\n  // none || all\r\n  @include prefixer(column-span, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-width($length: auto) {\r\n  // auto || length\r\n  @include prefixer(column-width, $length, webkit moz spec);\r\n}\r\n",
		"@mixin filter($function: none) {\r\n  // <filter-function> [<filter-function]* | none\r\n  @include prefixer(filter, $function, webkit spec);\r\n}\r\n",
		"// CSS3 Flexible Box Model and property defaults\r\n\r\n// Custom shorthand notation for flexbox\r\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\r\n  @include display-box;\r\n  @include box-orient($orient);\r\n  @include box-pack($pack);\r\n  @include box-align($align);\r\n}\r\n\r\n@mixin display-box {\r\n  display: -webkit-box;\r\n  display: -moz-box;\r\n  display: -ms-flexbox; // IE 10\r\n  display: box;\r\n}\r\n\r\n@mixin box-orient($orient: inline-axis) {\r\n// horizontal|vertical|inline-axis|block-axis|inherit\r\n  @include prefixer(box-orient, $orient, webkit moz spec);\r\n}\r\n\r\n@mixin box-pack($pack: start) {\r\n// start|end|center|justify\r\n  @include prefixer(box-pack, $pack, webkit moz spec);\r\n  -ms-flex-pack: $pack; // IE 10\r\n}\r\n\r\n@mixin box-align($align: stretch) {\r\n// start|end|center|baseline|stretch\r\n  @include prefixer(box-align, $align, webkit moz spec);\r\n  -ms-flex-align: $align; // IE 10\r\n}\r\n\r\n@mixin box-direction($direction: normal) {\r\n// normal|reverse|inherit\r\n  @include prefixer(box-direction, $direction, webkit moz spec);\r\n  -ms-flex-direction: $direction; // IE 10\r\n}\r\n\r\n@mixin box-lines($lines: single) {\r\n// single|multiple\r\n  @include prefixer(box-lines, $lines, webkit moz spec);\r\n}\r\n\r\n@mixin box-ordinal-group($int: 1) {\r\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\r\n  -ms-flex-order: $int; // IE 10\r\n}\r\n\r\n@mixin box-flex($value: 0) {\r\n  @include prefixer(box-flex, $value, webkit moz spec);\r\n  -ms-flex: $value; // IE 10\r\n}\r\n\r\n@mixin box-flex-group($int: 1) {\r\n  @include prefixer(box-flex-group, $int, webkit moz spec);\r\n}\r\n\r\n// CSS3 Flexible Box Model and property defaults\r\n// Unified attributes for 2009, 2011, and 2012 flavours.\r\n\r\n// 2009 - display (box | inline-box)\r\n// 2011 - display (flexbox | inline-flexbox)\r\n// 2012 - display (flex | inline-flex)\r\n@mixin display($value) {\r\n// flex | inline-flex\r\n  @if $value == \"flex\" {\r\n    // 2009\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: box;\r\n\r\n    // 2012\r\n    display: -webkit-flex;\r\n    display: -moz-flex;\r\n    display: -ms-flexbox; // 2011 (IE 10)\r\n    display: flex;\r\n  } @else if $value == \"inline-flex\" {\r\n    display: -webkit-inline-box;\r\n    display: -moz-inline-box;\r\n    display: inline-box;\r\n\r\n    display: -webkit-inline-flex;\r\n    display: -moz-inline-flex;\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n  } @else {\r\n    display: $value;\r\n  }\r\n}\r\n\r\n// 2009 - box-flex (integer)\r\n// 2011 - flex (decimal | width decimal)\r\n// 2012 - flex (integer integer width)\r\n@mixin flex($value) {\r\n\r\n  // Grab flex-grow for older browsers.\r\n  $flex-grow: nth($value, 1);\r\n\r\n  // 2009\r\n  @include prefixer(box-flex, $flex-grow, webkit moz spec);\r\n\r\n  // 2011 (IE 10), 2012\r\n  @include prefixer(flex, $value, webkit moz ms spec);\r\n}\r\n\r\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\r\n//      - box-direction (normal | reverse)\r\n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\r\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\r\n@mixin flex-direction($value: row) {\r\n\r\n  // Alt values.\r\n  $value-2009: $value;\r\n  $value-2011: $value;\r\n  $direction: normal;\r\n\r\n  @if $value == row {\r\n    $value-2009: horizontal;\r\n  } @else if $value == \"row-reverse\" {\r\n    $value-2009: horizontal;\r\n    $direction: reverse;\r\n  } @else if $value == column {\r\n    $value-2009: vertical;\r\n  } @else if $value == \"column-reverse\" {\r\n    $value-2009: vertical;\r\n    $direction: reverse;\r\n  }\r\n\r\n  // 2009\r\n  @include prefixer(box-orient, $value-2009, webkit moz spec);\r\n  @include prefixer(box-direction, $direction, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(flex-direction, $value, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-direction: $value;\r\n}\r\n\r\n// 2009 - box-lines (single | multiple)\r\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\r\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\r\n@mixin flex-wrap($value: nowrap) {\r\n  // Alt values\r\n  $alt-value: $value;\r\n  @if $value == nowrap {\r\n    $alt-value: single;\r\n  } @else if $value == wrap {\r\n    $alt-value: multiple;\r\n  } @else if $value == \"wrap-reverse\" {\r\n    $alt-value: multiple;\r\n  }\r\n\r\n  @include prefixer(box-lines, $alt-value, webkit moz spec);\r\n  @include prefixer(flex-wrap, $value, webkit moz ms spec);\r\n}\r\n\r\n// 2009 - TODO: parse values into flex-direction/flex-wrap\r\n// 2011 - TODO: parse values into flex-direction/flex-wrap\r\n// 2012 - flex-flow (flex-direction || flex-wrap)\r\n@mixin flex-flow($value) {\r\n  @include prefixer(flex-flow, $value, webkit moz spec);\r\n}\r\n\r\n// 2009 - box-ordinal-group (integer)\r\n// 2011 - flex-order (integer)\r\n// 2012 - order (integer)\r\n@mixin order($int: 0) {\r\n  // 2009\r\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(order, $int, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-order: $int;\r\n}\r\n\r\n// 2012 - flex-grow (number)\r\n@mixin flex-grow($number: 0) {\r\n  @include prefixer(flex-grow, $number, webkit moz spec);\r\n  -ms-flex-positive: $number;\r\n}\r\n\r\n// 2012 - flex-shrink (number)\r\n@mixin flex-shrink($number: 1) {\r\n  @include prefixer(flex-shrink, $number, webkit moz spec);\r\n  -ms-flex-negative: $number;\r\n}\r\n\r\n// 2012 - flex-basis (number)\r\n@mixin flex-basis($width: auto) {\r\n  @include prefixer(flex-basis, $width, webkit moz spec);\r\n  -ms-flex-preferred-size: $width;\r\n}\r\n\r\n// 2009 - box-pack (start | end | center | justify)\r\n// 2011 - flex-pack (start | end | center | justify)\r\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\r\n@mixin justify-content($value: flex-start) {\r\n\r\n  // Alt values.\r\n  $alt-value: $value;\r\n  @if $value == \"flex-start\" {\r\n    $alt-value: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $alt-value: end;\r\n  } @else if $value == \"space-between\" {\r\n    $alt-value: justify;\r\n  } @else if $value == \"space-around\" {\r\n    $alt-value: distribute;\r\n  }\r\n\r\n  // 2009\r\n  @include prefixer(box-pack, $alt-value, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(justify-content, $value, webkit moz ms o spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-pack: $alt-value;\r\n}\r\n\r\n// 2009 - box-align (start | end | center | baseline | stretch)\r\n// 2011 - flex-align (start | end | center | baseline | stretch)\r\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\r\n@mixin align-items($value: stretch) {\r\n\r\n  $alt-value: $value;\r\n\r\n  @if $value == \"flex-start\" {\r\n    $alt-value: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $alt-value: end;\r\n  }\r\n\r\n  // 2009\r\n  @include prefixer(box-align, $alt-value, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(align-items, $value, webkit moz ms o spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-align: $alt-value;\r\n}\r\n\r\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\r\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\r\n@mixin align-self($value: auto) {\r\n\r\n  $value-2011: $value;\r\n  @if $value == \"flex-start\" {\r\n    $value-2011: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $value-2011: end;\r\n  }\r\n\r\n  // 2012\r\n  @include prefixer(align-self, $value, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-item-align: $value-2011;\r\n}\r\n\r\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\r\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\r\n@mixin align-content($value: stretch) {\r\n\r\n  $value-2011: $value;\r\n  @if $value == \"flex-start\" {\r\n    $value-2011: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $value-2011: end;\r\n  } @else if $value == \"space-between\" {\r\n    $value-2011: justify;\r\n  } @else if $value == \"space-around\" {\r\n    $value-2011: distribute;\r\n  }\r\n\r\n  // 2012\r\n  @include prefixer(align-content, $value, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-line-pack: $value-2011;\r\n}\r\n",
		"@mixin font-face(\r\n  $font-family,\r\n  $file-path,\r\n  $weight: normal,\r\n  $style: normal,\r\n  $asset-pipeline: $asset-pipeline,\r\n  $file-formats: eot woff2 woff ttf svg) {\r\n\r\n  $font-url-prefix: font-url-prefixer($asset-pipeline);\r\n\r\n  @font-face {\r\n    font-family: $font-family;\r\n    font-style: $style;\r\n    font-weight: $weight;\r\n\r\n    src: font-source-declaration(\r\n      $font-family,\r\n      $file-path,\r\n      $asset-pipeline,\r\n      $file-formats,\r\n      $font-url-prefix\r\n    );\r\n  }\r\n}\r\n",
		"@mixin font-feature-settings($settings...) {\r\n  @if length($settings) == 0 { $settings: none; }\r\n  @include prefixer(font-feature-settings, $settings, webkit moz ms spec);\r\n}\r\n",
		"// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)\r\n@mixin hidpi($ratio: 1.3) {\r\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\r\n  only screen and (min--moz-device-pixel-ratio: $ratio),\r\n  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),\r\n  only screen and (min-resolution: round($ratio * 96dpi)),\r\n  only screen and (min-resolution: $ratio * 1dppx) {\r\n    @content;\r\n  }\r\n}\r\n",
		"@mixin hyphens($hyphenation: none) {\r\n  // none | manual | auto\r\n  @include prefixer(hyphens, $hyphenation, webkit moz ms spec);\r\n}\r\n",
		"@mixin image-rendering ($mode:auto) {\r\n\r\n  @if ($mode == crisp-edges) {\r\n    -ms-interpolation-mode: nearest-neighbor; // IE8+\r\n    image-rendering: -moz-crisp-edges;\r\n    image-rendering: -o-crisp-edges;\r\n    image-rendering: -webkit-optimize-contrast;\r\n    image-rendering: crisp-edges;\r\n  }\r\n\r\n  @else {\r\n    image-rendering: $mode;\r\n  }\r\n}\r\n",
		"// Adds keyframes blocks for supported prefixes, removing redundant prefixes in the block's content\r\n@mixin keyframes($name) {\r\n  $original-prefix-for-webkit:    $prefix-for-webkit;\r\n  $original-prefix-for-mozilla:   $prefix-for-mozilla;\r\n  $original-prefix-for-microsoft: $prefix-for-microsoft;\r\n  $original-prefix-for-opera:     $prefix-for-opera;\r\n  $original-prefix-for-spec:      $prefix-for-spec;\r\n\r\n  @if $original-prefix-for-webkit {\r\n    @include disable-prefix-for-all();\r\n    $prefix-for-webkit: true !global;\r\n    @-webkit-keyframes #{$name} {\r\n      @content;\r\n    }\r\n  }\r\n\r\n  @if $original-prefix-for-mozilla {\r\n    @include disable-prefix-for-all();\r\n    $prefix-for-mozilla: true !global;\r\n    @-moz-keyframes #{$name} {\r\n      @content;\r\n    }\r\n  }\r\n\r\n  $prefix-for-webkit:    $original-prefix-for-webkit    !global;\r\n  $prefix-for-mozilla:   $original-prefix-for-mozilla   !global;\r\n  $prefix-for-microsoft: $original-prefix-for-microsoft !global;\r\n  $prefix-for-opera:     $original-prefix-for-opera     !global;\r\n  $prefix-for-spec:      $original-prefix-for-spec      !global;\r\n\r\n  @if $original-prefix-for-spec {\r\n    @keyframes #{$name} {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n",
		"@mixin linear-gradient($pos, $g1, $g2: null,\r\n                       $g3: null, $g4: null,\r\n                       $g5: null, $g6: null,\r\n                       $g7: null, $g8: null,\r\n                       $g9: null, $g10: null,\r\n                       $fallback: null) {\r\n  // Detect what type of value exists in $pos\r\n  $pos-type: type-of(nth($pos, 1));\r\n  $pos-spec: null;\r\n  $pos-degree: null;\r\n\r\n  // If $pos is missing from mixin, reassign vars and add default position\r\n  @if ($pos-type == color) or (nth($pos, 1) == \"transparent\")  {\r\n    $g10: $g9; $g9: $g8; $g8: $g7; $g7: $g6; $g6: $g5;\r\n    $g5: $g4; $g4: $g3; $g3: $g2; $g2: $g1; $g1: $pos;\r\n    $pos: null;\r\n  }\r\n\r\n  @if $pos {\r\n    $positions: _linear-positions-parser($pos);\r\n    $pos-degree: nth($positions, 1);\r\n    $pos-spec:   nth($positions, 2);\r\n  }\r\n\r\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\r\n\r\n  // Set $g1 as the default fallback color\r\n  $fallback-color: nth($g1, 1);\r\n\r\n  // If $fallback is a color use that color as the fallback color\r\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\r\n    $fallback-color: $fallback;\r\n  }\r\n\r\n  background-color: $fallback-color;\r\n  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome\r\n  background-image: unquote(\"linear-gradient(#{$pos-spec}#{$full})\");\r\n}\r\n",
		"@mixin perspective($depth: none) {\r\n  // none | <length>\r\n  @include prefixer(perspective, $depth, webkit moz spec);\r\n}\r\n\r\n@mixin perspective-origin($value: 50% 50%) {\r\n  @include prefixer(perspective-origin, $value, webkit moz spec);\r\n}\r\n",
		"@mixin placeholder {\r\n  $placeholders: \":-webkit-input\" \":-moz\" \"-moz\" \"-ms-input\";\r\n  @each $placeholder in $placeholders {\r\n    &:#{$placeholder}-placeholder {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n",
		"// Requires Sass 3.1+\r\n@mixin radial-gradient($g1, $g2,\r\n                       $g3: null, $g4: null,\r\n                       $g5: null, $g6: null,\r\n                       $g7: null, $g8: null,\r\n                       $g9: null, $g10: null,\r\n                       $pos: null,\r\n                       $shape-size: null,\r\n                       $fallback: null) {\r\n\r\n  $data: _radial-arg-parser($g1, $g2, $pos, $shape-size);\r\n  $g1:  nth($data, 1);\r\n  $g2:  nth($data, 2);\r\n  $pos: nth($data, 3);\r\n  $shape-size: nth($data, 4);\r\n\r\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\r\n\r\n  // Strip deprecated cover/contain for spec\r\n  $shape-size-spec: _shape-size-stripper($shape-size);\r\n\r\n  // Set $g1 as the default fallback color\r\n  $first-color: nth($full, 1);\r\n  $fallback-color: nth($first-color, 1);\r\n\r\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\r\n    $fallback-color: $fallback;\r\n  }\r\n\r\n  // Add Commas and spaces\r\n  $shape-size: if($shape-size, \"#{$shape-size}, \", null);\r\n  $pos:        if($pos, \"#{$pos}, \", null);\r\n  $pos-spec:   if($pos, \"at #{$pos}\", null);\r\n  $shape-size-spec: if(($shape-size-spec != \" \") and ($pos == null), \"#{$shape-size-spec}, \", \"#{$shape-size-spec} \");\r\n\r\n  background-color:  $fallback-color;\r\n  background-image: -webkit-radial-gradient(#{$pos}#{$shape-size}#{$full});\r\n  background-image: radial-gradient(#{$shape-size-spec}#{$pos-spec}#{$full});\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Outputs the spec and prefixed versions of the `::selection` pseudo-element.\r\n///\r\n/// @param {Bool} $current-selector [false]\r\n///   If set to `true`, it takes the current element into consideration.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include selection(true) {\r\n///       background-color: #ffbb52;\r\n///     }\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element::-moz-selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n///\r\n///   .element::selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n\r\n@mixin selection($current-selector: false) {\r\n  @if $current-selector {\r\n    &::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    &::selection {\r\n      @content;\r\n    }\r\n  } @else {\r\n    ::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    ::selection {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n",
		"@mixin text-decoration($value) {\r\n// <text-decoration-line> || <text-decoration-style> || <text-decoration-color>\r\n  @include prefixer(text-decoration, $value, moz);\r\n}\r\n\r\n@mixin text-decoration-line($line: none) {\r\n// none || underline || overline || line-through\r\n  @include prefixer(text-decoration-line, $line, moz);\r\n}\r\n\r\n@mixin text-decoration-style($style: solid) {\r\n// solid || double || dotted || dashed || wavy\r\n  @include prefixer(text-decoration-style, $style, moz webkit);\r\n}\r\n\r\n@mixin text-decoration-color($color: currentColor) {\r\n// currentColor || <color>\r\n  @include prefixer(text-decoration-color, $color, moz);\r\n}\r\n",
		"@mixin transform($property: none) {\r\n  // none | <transform-function>\r\n  @include prefixer(transform, $property, webkit moz ms o spec);\r\n}\r\n\r\n@mixin transform-origin($axes: 50%) {\r\n  // x-axis - left | center | right  | length | %\r\n  // y-axis - top  | center | bottom | length | %\r\n  // z-axis -                          length\r\n  @include prefixer(transform-origin, $axes, webkit moz ms o spec);\r\n}\r\n\r\n@mixin transform-style($style: flat) {\r\n  @include prefixer(transform-style, $style, webkit moz ms o spec);\r\n}\r\n",
		"// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.\r\n// Example: @include transition (all 2s ease-in-out);\r\n//          @include transition (opacity 1s ease-in 2s, width 2s ease-out);\r\n//          @include transition-property (transform, opacity);\r\n\r\n@mixin transition($properties...) {\r\n  // Fix for vendor-prefix transform property\r\n  $needs-prefixes: false;\r\n  $webkit: ();\r\n  $moz: ();\r\n  $spec: ();\r\n\r\n  // Create lists for vendor-prefixed transform\r\n  @each $list in $properties {\r\n    @if nth($list, 1) == \"transform\" {\r\n      $needs-prefixes: true;\r\n      $list1: -webkit-transform;\r\n      $list2: -moz-transform;\r\n      $list3: ();\r\n\r\n      @each $var in $list {\r\n        $list3: join($list3, $var);\r\n\r\n        @if $var != \"transform\" {\r\n          $list1: join($list1, $var);\r\n          $list2: join($list2, $var);\r\n        }\r\n      }\r\n\r\n      $webkit: append($webkit, $list1);\r\n      $moz:    append($moz,    $list2);\r\n      $spec:   append($spec,   $list3);\r\n    } @else {\r\n      $webkit: append($webkit, $list, comma);\r\n      $moz:    append($moz,    $list, comma);\r\n      $spec:   append($spec,   $list, comma);\r\n    }\r\n  }\r\n\r\n  @if $needs-prefixes {\r\n    -webkit-transition: $webkit;\r\n       -moz-transition: $moz;\r\n            transition: $spec;\r\n  } @else {\r\n    @if length($properties) >= 1 {\r\n      @include prefixer(transition, $properties, webkit moz spec);\r\n    } @else {\r\n      $properties: all 0.15s ease-out 0s;\r\n      @include prefixer(transition, $properties, webkit moz spec);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin transition-property($properties...) {\r\n  -webkit-transition-property: transition-property-names($properties, \"webkit\");\r\n     -moz-transition-property: transition-property-names($properties, \"moz\");\r\n          transition-property: transition-property-names($properties, false);\r\n}\r\n\r\n@mixin transition-duration($times...) {\r\n  @include prefixer(transition-duration, $times, webkit moz spec);\r\n}\r\n\r\n@mixin transition-timing-function($motions...) {\r\n  // ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()\r\n  @include prefixer(transition-timing-function, $motions, webkit moz spec);\r\n}\r\n\r\n@mixin transition-delay($times...) {\r\n  @include prefixer(transition-delay, $times, webkit moz spec);\r\n}\r\n",
		"@mixin user-select($value: none) {\r\n  @include prefixer(user-select, $value, webkit moz ms spec);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `border-color` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include border-color(#a60b55 #76cd9c null #e8ae1a);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     border-left-color: #e8ae1a;\r\n///     border-right-color: #76cd9c;\r\n///     border-top-color: #a60b55;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `border-color`\r\n\r\n@mixin border-color($vals...) {\r\n  @include directional-property(border, color, $vals...);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `border-radius` on both corners on the side of a box.\r\n///\r\n/// @param {Number} $radii\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element-one {\r\n///     @include border-top-radius(5px);\r\n///   }\r\n///\r\n///   .element-two {\r\n///     @include border-left-radius(3px);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element-one {\r\n///     border-top-left-radius: 5px;\r\n///     border-top-right-radius: 5px;\r\n///   }\r\n///\r\n///   .element-two {\r\n///     border-bottom-left-radius: 3px;\r\n///     border-top-left-radius: 3px;\r\n///   }\r\n///\r\n/// @output `border-radius`\r\n\r\n@mixin border-top-radius($radii) {\r\n  border-top-left-radius: $radii;\r\n  border-top-right-radius: $radii;\r\n}\r\n\r\n@mixin border-right-radius($radii) {\r\n  border-bottom-right-radius: $radii;\r\n  border-top-right-radius: $radii;\r\n}\r\n\r\n@mixin border-bottom-radius($radii) {\r\n  border-bottom-left-radius: $radii;\r\n  border-bottom-right-radius: $radii;\r\n}\r\n\r\n@mixin border-left-radius($radii) {\r\n  border-bottom-left-radius: $radii;\r\n  border-top-left-radius: $radii;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `border-style` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include border-style(dashed null solid);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     border-bottom-style: solid;\r\n///     border-top-style: dashed;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `border-style`\r\n\r\n@mixin border-style($vals...) {\r\n  @include directional-property(border, style, $vals...);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `border-width` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include border-width(1em null 20px);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     border-bottom-width: 20px;\r\n///     border-top-width: 1em;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `border-width`\r\n\r\n@mixin border-width($vals...) {\r\n  @include directional-property(border, width, $vals...);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Generates variables for all buttons. Please note that you must use interpolation on the variable: `#{$all-buttons}`.\r\n///\r\n/// @example scss - Usage\r\n///   #{$all-buttons} {\r\n///     background-color: #f00;\r\n///   }\r\n///\r\n///   #{$all-buttons-focus},\r\n///   #{$all-buttons-hover} {\r\n///     background-color: #0f0;\r\n///   }\r\n///\r\n///   #{$all-buttons-active} {\r\n///     background-color: #00f;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   button,\r\n///   input[type=\"button\"],\r\n///   input[type=\"reset\"],\r\n///   input[type=\"submit\"] {\r\n///     background-color: #f00;\r\n///   }\r\n///\r\n///   button:focus,\r\n///   input[type=\"button\"]:focus,\r\n///   input[type=\"reset\"]:focus,\r\n///   input[type=\"submit\"]:focus,\r\n///   button:hover,\r\n///   input[type=\"button\"]:hover,\r\n///   input[type=\"reset\"]:hover,\r\n///   input[type=\"submit\"]:hover {\r\n///     background-color: #0f0;\r\n///   }\r\n///\r\n///   button:active,\r\n///   input[type=\"button\"]:active,\r\n///   input[type=\"reset\"]:active,\r\n///   input[type=\"submit\"]:active {\r\n///     background-color: #00f;\r\n///   }\r\n///\r\n/// @require assign-inputs\r\n///\r\n/// @type List\r\n///\r\n/// @todo Remove double assigned variables (Lines 59–62) in v5.0.0\r\n\r\n$buttons-list: 'button',\r\n               'input[type=\"button\"]',\r\n               'input[type=\"reset\"]',\r\n               'input[type=\"submit\"]';\r\n\r\n$all-buttons:        assign-inputs($buttons-list);\r\n$all-buttons-active: assign-inputs($buttons-list, active);\r\n$all-buttons-focus:  assign-inputs($buttons-list, focus);\r\n$all-buttons-hover:  assign-inputs($buttons-list, hover);\r\n\r\n$all-button-inputs:        $all-buttons;\r\n$all-button-inputs-active: $all-buttons-active;\r\n$all-button-inputs-focus:  $all-buttons-focus;\r\n$all-button-inputs-hover:  $all-buttons-hover;\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides an easy way to include a clearfix for containing floats.\r\n///\r\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include clearfix;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element::after {\r\n///     clear: both;\r\n///     content: \"\";\r\n///     display: table;\r\n///   }\r\n\r\n@mixin clearfix {\r\n  &::after {\r\n    clear: both;\r\n    content: \"\";\r\n    display: table;\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Truncates text and adds an ellipsis to represent overflow.\r\n///\r\n/// @param {Number} $width [100%]\r\n///   Max-width for the string to respect before being truncated\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include ellipsis;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     display: inline-block;\r\n///     max-width: 100%;\r\n///     overflow: hidden;\r\n///     text-overflow: ellipsis;\r\n///     white-space: nowrap;\r\n///     word-wrap: normal;\r\n///   }\r\n\r\n@mixin ellipsis($width: 100%) {\r\n  display: inline-block;\r\n  max-width: $width;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  word-wrap: normal;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Georgia font stack.\r\n///\r\n/// @type List\r\n\r\n$georgia: \"Georgia\", \"Cambria\", \"Times New Roman\", \"Times\", serif;\r\n\r\n/// Helvetica font stack.\r\n///\r\n/// @type List\r\n\r\n$helvetica: \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\r\n\r\n/// Lucida Grande font stack.\r\n///\r\n/// @type List\r\n\r\n$lucida-grande: \"Lucida Grande\", \"Tahoma\", \"Verdana\", \"Arial\", sans-serif;\r\n\r\n/// Monospace font stack.\r\n///\r\n/// @type List\r\n\r\n$monospace: \"Bitstream Vera Sans Mono\", \"Consolas\", \"Courier\", monospace;\r\n\r\n/// Verdana font stack.\r\n///\r\n/// @type List\r\n\r\n$verdana: \"Verdana\", \"Geneva\", sans-serif;\r\n",
		"/// Hides the text in an element, commonly used to show an image. Some elements will need block-level styles applied.\r\n///\r\n/// @link http://zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include hide-text;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     overflow: hidden;\r\n///     text-indent: 101%;\r\n///     white-space: nowrap;\r\n///   }\r\n///\r\n/// @todo Remove height argument in v5.0.0\r\n\r\n@mixin hide-text($height: null) {\r\n  overflow: hidden;\r\n  text-indent: 101%;\r\n  white-space: nowrap;\r\n\r\n  @if $height {\r\n    @warn \"The `hide-text` mixin has changed and no longer requires a height. The height argument will no longer be accepted in v5.0.0\";\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `margin` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include margin(null 10px 3em 20vh);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     margin-bottom: 3em;\r\n///     margin-left: 20vh;\r\n///     margin-right: 10px;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `margin`\r\n\r\n@mixin margin($vals...) {\r\n  @include directional-property(margin, false, $vals...);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `padding` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include padding(12vh null 10px 5%);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     padding-bottom: 10px;\r\n///     padding-left: 5%;\r\n///     padding-top: 12vh;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `padding`\r\n\r\n@mixin padding($vals...) {\r\n  @include directional-property(padding, false, $vals...);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for setting an element’s position. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Position} $position [relative]\r\n///   A CSS position value\r\n///\r\n/// @param {Arglist} $coordinates [null null null null]\r\n///   List of values that correspond to the 4-value syntax for the edges of a box\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include position(absolute, 0 null null 10em);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     left: 10em;\r\n///     position: absolute;\r\n///     top: 0;\r\n///   }\r\n///\r\n/// @require {function} is-length\r\n/// @require {function} unpack\r\n\r\n@mixin position($position: relative, $coordinates: null null null null) {\r\n  @if type-of($position) == list {\r\n    $coordinates: $position;\r\n    $position: relative;\r\n  }\r\n\r\n  $coordinates: unpack($coordinates);\r\n\r\n  $offsets: (\r\n    top:    nth($coordinates, 1),\r\n    right:  nth($coordinates, 2),\r\n    bottom: nth($coordinates, 3),\r\n    left:   nth($coordinates, 4)\r\n  );\r\n\r\n  position: $position;\r\n\r\n  @each $offset, $value in $offsets {\r\n    @if is-length($value) {\r\n      #{$offset}: $value;\r\n    }\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// A mixin for generating vendor prefixes on non-standardized properties.\r\n///\r\n/// @param {String} $property\r\n///   Property to prefix\r\n///\r\n/// @param {*} $value\r\n///   Value to use\r\n///\r\n/// @param {List} $prefixes\r\n///   Prefixes to define\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include prefixer(border-radius, 10px, webkit ms spec);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     -webkit-border-radius: 10px;\r\n///     -moz-border-radius: 10px;\r\n///     border-radius: 10px;\r\n///   }\r\n///\r\n/// @require {variable} $prefix-for-webkit\r\n/// @require {variable} $prefix-for-mozilla\r\n/// @require {variable} $prefix-for-microsoft\r\n/// @require {variable} $prefix-for-opera\r\n/// @require {variable} $prefix-for-spec\r\n\r\n@mixin prefixer($property, $value, $prefixes) {\r\n  @each $prefix in $prefixes {\r\n    @if $prefix == webkit {\r\n      @if $prefix-for-webkit {\r\n        -webkit-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == moz {\r\n      @if $prefix-for-mozilla {\r\n        -moz-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == ms {\r\n      @if $prefix-for-microsoft {\r\n        -ms-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == o {\r\n      @if $prefix-for-opera {\r\n        -o-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == spec {\r\n      @if $prefix-for-spec {\r\n        #{$property}: $value;\r\n      }\r\n    } @else  {\r\n      @warn \"Unrecognized prefix: #{$prefix}\";\r\n    }\r\n  }\r\n}\r\n\r\n@mixin disable-prefix-for-all() {\r\n  $prefix-for-webkit:    false !global;\r\n  $prefix-for-mozilla:   false !global;\r\n  $prefix-for-microsoft: false !global;\r\n  $prefix-for-opera:     false !global;\r\n  $prefix-for-spec:      false !global;\r\n}\r\n",
		"@mixin retina-image($filename, $background-size, $extension: png, $retina-filename: null, $retina-suffix: _2x, $asset-pipeline: $asset-pipeline) {\r\n  @if $asset-pipeline {\r\n    background-image: image-url(\"#{$filename}.#{$extension}\");\r\n  } @else {\r\n    background-image:       url(\"#{$filename}.#{$extension}\");\r\n  }\r\n\r\n  @include hidpi {\r\n    @if $asset-pipeline {\r\n      @if $retina-filename {\r\n        background-image: image-url(\"#{$retina-filename}.#{$extension}\");\r\n      } @else {\r\n        background-image: image-url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\r\n      }\r\n    } @else {\r\n      @if $retina-filename {\r\n        background-image: url(\"#{$retina-filename}.#{$extension}\");\r\n      } @else {\r\n        background-image: url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\r\n      }\r\n    }\r\n\r\n    background-size: $background-size;\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Sets the `width` and `height` of the element.\r\n///\r\n/// @param {List} $size\r\n///   A list of at most 2 size values.\r\n///\r\n///   If there is only a single value in `$size` it is used for both width and height. All units are supported.\r\n///\r\n/// @example scss - Usage\r\n///   .first-element {\r\n///     @include size(2em);\r\n///   }\r\n///\r\n///   .second-element {\r\n///     @include size(auto 10em);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .first-element {\r\n///     width: 2em;\r\n///     height: 2em;\r\n///   }\r\n///\r\n///   .second-element {\r\n///     width: auto;\r\n///     height: 10em;\r\n///   }\r\n///\r\n/// @todo Refactor in 5.0.0 to use a comma-separated argument\r\n\r\n@mixin size($value) {\r\n  $width: nth($value, 1);\r\n  $height: $width;\r\n\r\n  @if length($value) > 1 {\r\n    $height: nth($value, 2);\r\n  }\r\n\r\n  @if is-size($height) {\r\n    height: $height;\r\n  } @else {\r\n    @warn \"`#{$height}` is not a valid length for the `$height` parameter in the `size` mixin.\";\r\n  }\r\n\r\n  @if is-size($width) {\r\n    width: $width;\r\n  } @else {\r\n    @warn \"`#{$width}` is not a valid length for the `$width` parameter in the `size` mixin.\";\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Generates variables for all text-based inputs. Please note that you must use interpolation on the variable: `#{$all-text-inputs}`.\r\n///\r\n/// @example scss - Usage\r\n///   #{$all-text-inputs} {\r\n///     border: 1px solid #f00;\r\n///   }\r\n///\r\n///   #{$all-text-inputs-focus},\r\n///   #{$all-text-inputs-hover} {\r\n///     border: 1px solid #0f0;\r\n///   }\r\n///\r\n///   #{$all-text-inputs-active} {\r\n///     border: 1px solid #00f;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   input[type=\"color\"],\r\n///   input[type=\"date\"],\r\n///   input[type=\"datetime\"],\r\n///   input[type=\"datetime-local\"],\r\n///   input[type=\"email\"],\r\n///   input[type=\"month\"],\r\n///   input[type=\"number\"],\r\n///   input[type=\"password\"],\r\n///   input[type=\"search\"],\r\n///   input[type=\"tel\"],\r\n///   input[type=\"text\"],\r\n///   input[type=\"time\"],\r\n///   input[type=\"url\"],\r\n///   input[type=\"week\"],\r\n///   textarea {\r\n///     border: 1px solid #f00;\r\n///   }\r\n///\r\n///   input[type=\"color\"]:focus,\r\n///   input[type=\"date\"]:focus,\r\n///   input[type=\"datetime\"]:focus,\r\n///   input[type=\"datetime-local\"]:focus,\r\n///   input[type=\"email\"]:focus,\r\n///   input[type=\"month\"]:focus,\r\n///   input[type=\"number\"]:focus,\r\n///   input[type=\"password\"]:focus,\r\n///   input[type=\"search\"]:focus,\r\n///   input[type=\"tel\"]:focus,\r\n///   input[type=\"text\"]:focus,\r\n///   input[type=\"time\"]:focus,\r\n///   input[type=\"url\"]:focus,\r\n///   input[type=\"week\"]:focus,\r\n///   textarea:focus,\r\n///   input[type=\"color\"]:hover,\r\n///   input[type=\"date\"]:hover,\r\n///   input[type=\"datetime\"]:hover,\r\n///   input[type=\"datetime-local\"]:hover,\r\n///   input[type=\"email\"]:hover,\r\n///   input[type=\"month\"]:hover,\r\n///   input[type=\"number\"]:hover,\r\n///   input[type=\"password\"]:hover,\r\n///   input[type=\"search\"]:hover,\r\n///   input[type=\"tel\"]:hover,\r\n///   input[type=\"text\"]:hover,\r\n///   input[type=\"time\"]:hover,\r\n///   input[type=\"url\"]:hover,\r\n///   input[type=\"week\"]:hover,\r\n///   textarea:hover {\r\n///     border: 1px solid #0f0;\r\n///   }\r\n///\r\n///   input[type=\"color\"]:active,\r\n///   input[type=\"date\"]:active,\r\n///   input[type=\"datetime\"]:active,\r\n///   input[type=\"datetime-local\"]:active,\r\n///   input[type=\"email\"]:active,\r\n///   input[type=\"month\"]:active,\r\n///   input[type=\"number\"]:active,\r\n///   input[type=\"password\"]:active,\r\n///   input[type=\"search\"]:active,\r\n///   input[type=\"tel\"]:active,\r\n///   input[type=\"text\"]:active,\r\n///   input[type=\"time\"]:active,\r\n///   input[type=\"url\"]:active,\r\n///   input[type=\"week\"]:active,\r\n///   textarea:active {\r\n///     border: 1px solid #00f;\r\n///   }\r\n///\r\n/// @require assign-inputs\r\n///\r\n/// @type List\r\n\r\n$text-inputs-list: 'input[type=\"color\"]',\r\n                   'input[type=\"date\"]',\r\n                   'input[type=\"datetime\"]',\r\n                   'input[type=\"datetime-local\"]',\r\n                   'input[type=\"email\"]',\r\n                   'input[type=\"month\"]',\r\n                   'input[type=\"number\"]',\r\n                   'input[type=\"password\"]',\r\n                   'input[type=\"search\"]',\r\n                   'input[type=\"tel\"]',\r\n                   'input[type=\"text\"]',\r\n                   'input[type=\"time\"]',\r\n                   'input[type=\"url\"]',\r\n                   'input[type=\"week\"]',\r\n                   'input:not([type])',\r\n                   'textarea';\r\n\r\n$all-text-inputs:        assign-inputs($text-inputs-list);\r\n$all-text-inputs-active: assign-inputs($text-inputs-list, active);\r\n$all-text-inputs-focus:  assign-inputs($text-inputs-list, focus);\r\n$all-text-inputs-hover:  assign-inputs($text-inputs-list, hover);\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// CSS cubic-bezier timing functions. Timing functions courtesy of jquery.easie (github.com/jaukia/easie)\r\n///\r\n/// Timing functions are the same as demoed here: http://jqueryui.com/resources/demos/effect/easing.html\r\n///\r\n/// @type cubic-bezier\r\n\r\n$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);\r\n$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);\r\n$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);\r\n$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);\r\n$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);\r\n$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);\r\n$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);\r\n$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);\r\n\r\n$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);\r\n$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);\r\n$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);\r\n$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);\r\n$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);\r\n$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);\r\n$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);\r\n$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);\r\n\r\n$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);\r\n$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);\r\n$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);\r\n$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);\r\n$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);\r\n$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);\r\n$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);\r\n$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);\r\n",
		"@mixin triangle($size, $color, $direction) {\r\n  $width: nth($size, 1);\r\n  $height: nth($size, length($size));\r\n  $foreground-color: nth($color, 1);\r\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\r\n  height: 0;\r\n  width: 0;\r\n\r\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\r\n    $width: $width / 2;\r\n    $height: if(length($size) > 1, $height, $height/2);\r\n\r\n    @if $direction == up {\r\n      border-bottom: $height solid $foreground-color;\r\n      border-left: $width solid $background-color;\r\n      border-right: $width solid $background-color;\r\n    } @else if $direction == right {\r\n      border-bottom: $width solid $background-color;\r\n      border-left: $height solid $foreground-color;\r\n      border-top: $width solid $background-color;\r\n    } @else if $direction == down {\r\n      border-left: $width solid $background-color;\r\n      border-right: $width solid $background-color;\r\n      border-top: $height solid $foreground-color;\r\n    } @else if $direction == left {\r\n      border-bottom: $width solid $background-color;\r\n      border-right: $height solid $foreground-color;\r\n      border-top: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == up-right) or ($direction == up-left) {\r\n    border-top: $height solid $foreground-color;\r\n\r\n    @if $direction == up-right {\r\n      border-left:  $width solid $background-color;\r\n    } @else if $direction == up-left {\r\n      border-right: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == down-right) or ($direction == down-left) {\r\n    border-bottom: $height solid $foreground-color;\r\n\r\n    @if $direction == down-right {\r\n      border-left:  $width solid $background-color;\r\n    } @else if $direction == down-left {\r\n      border-right: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == inset-up) {\r\n    border-color: $background-color $background-color $foreground-color;\r\n    border-style: solid;\r\n    border-width: $height $width;\r\n  } @else if ($direction == inset-down) {\r\n    border-color: $foreground-color $background-color $background-color;\r\n    border-style: solid;\r\n    border-width: $height $width;\r\n  } @else if ($direction == inset-right) {\r\n    border-color: $background-color $background-color $background-color $foreground-color;\r\n    border-style: solid;\r\n    border-width: $width $height;\r\n  } @else if ($direction == inset-left) {\r\n    border-color: $background-color $foreground-color $background-color $background-color;\r\n    border-style: solid;\r\n    border-width: $width $height;\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides an easy way to change the `word-wrap` property.\r\n///\r\n/// @param {String} $wrap [break-word]\r\n///   Value for the `word-break` property.\r\n///\r\n/// @example scss - Usage\r\n///   .wrapper {\r\n///     @include word-wrap(break-word);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .wrapper {\r\n///     overflow-wrap: break-word;\r\n///     word-break: break-all;\r\n///     word-wrap: break-word;\r\n///   }\r\n\r\n@mixin word-wrap($wrap: break-word) {\r\n  overflow-wrap: $wrap;\r\n  word-wrap: $wrap;\r\n\r\n  @if $wrap == break-word {\r\n    word-break: break-all;\r\n  } @else {\r\n    word-break: $wrap;\r\n  }\r\n}\r\n",
		"// The following features have been deprecated and will be removed in the next MAJOR version release\r\n\r\n@mixin inline-block {\r\n  display: inline-block;\r\n\r\n  @warn \"The inline-block mixin is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n@mixin button ($style: simple, $base-color: #4294f0, $text-size: inherit, $padding: 7px 18px) {\r\n\r\n  @if type-of($style) == string and type-of($base-color) == color {\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == string and type-of($base-color) == number {\r\n    $padding: $text-size;\r\n    $text-size: $base-color;\r\n    $base-color: #4294f0;\r\n\r\n    @if $padding == inherit {\r\n      $padding: 7px 18px;\r\n    }\r\n\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == color and type-of($base-color) == color {\r\n    $base-color: $style;\r\n    $style: simple;\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == color and type-of($base-color) == number {\r\n    $padding: $text-size;\r\n    $text-size: $base-color;\r\n    $base-color: $style;\r\n    $style: simple;\r\n\r\n    @if $padding == inherit {\r\n      $padding: 7px 18px;\r\n    }\r\n\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == number {\r\n    $padding: $base-color;\r\n    $text-size: $style;\r\n    $base-color: #4294f0;\r\n    $style: simple;\r\n\r\n    @if $padding == #4294f0 {\r\n      $padding: 7px 18px;\r\n    }\r\n\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n    opacity: 0.5;\r\n  }\r\n\r\n  @warn \"The button mixin is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n// Selector Style Button\r\n@mixin buttonstyle($type, $b-color, $t-size, $pad) {\r\n  // Grayscale button\r\n  @if $type == simple and $b-color == grayscale($b-color) {\r\n    @include simple($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  @if $type == shiny and $b-color == grayscale($b-color) {\r\n    @include shiny($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  @if $type == pill and $b-color == grayscale($b-color) {\r\n    @include pill($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  @if $type == flat and $b-color == grayscale($b-color) {\r\n    @include flat($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  // Colored button\r\n  @if $type == simple {\r\n    @include simple($b-color, false, $t-size, $pad);\r\n  }\r\n\r\n  @else if $type == shiny {\r\n    @include shiny($b-color, false, $t-size, $pad);\r\n  }\r\n\r\n  @else if $type == pill {\r\n    @include pill($b-color, false, $t-size, $pad);\r\n  }\r\n\r\n  @else if $type == flat {\r\n    @include flat($b-color, false, $t-size, $pad);\r\n  }\r\n}\r\n\r\n// Simple Button\r\n@mixin simple($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n  $border:        adjust-color($base-color, $saturation:  9%,  $lightness: -14%);\r\n  $inset-shadow:  adjust-color($base-color, $saturation: -8%,  $lightness:  15%);\r\n  $stop-gradient: adjust-color($base-color, $saturation:  9%,  $lightness: -11%);\r\n  $text-shadow:   adjust-color($base-color, $saturation:  15%, $lightness: -18%);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\r\n  }\r\n\r\n  @if $grayscale == true {\r\n    $border:        grayscale($border);\r\n    $inset-shadow:  grayscale($inset-shadow);\r\n    $stop-gradient: grayscale($stop-gradient);\r\n    $text-shadow:   grayscale($text-shadow);\r\n  }\r\n\r\n  border: 1px solid $border;\r\n  border-radius: 3px;\r\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: bold;\r\n  @include linear-gradient ($base-color, $stop-gradient);\r\n  padding: $padding;\r\n  text-decoration: none;\r\n  text-shadow: 0 1px 0 $text-shadow;\r\n  background-clip: padding-box;\r\n\r\n  &:hover:not(:disabled) {\r\n    $base-color-hover:    adjust-color($base-color, $saturation: -4%, $lightness: -5%);\r\n    $inset-shadow-hover:  adjust-color($base-color, $saturation: -7%, $lightness:  5%);\r\n    $stop-gradient-hover: adjust-color($base-color, $saturation:  8%, $lightness: -14%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-hover:    grayscale($base-color-hover);\r\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\r\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\r\n    }\r\n\r\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\r\n\r\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $border-active:       adjust-color($base-color, $saturation: 9%, $lightness: -14%);\r\n    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);\r\n\r\n    @if $grayscale == true {\r\n      $border-active:       grayscale($border-active);\r\n      $inset-shadow-active: grayscale($inset-shadow-active);\r\n    }\r\n\r\n    border: 1px solid $border-active;\r\n    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;\r\n  }\r\n}\r\n\r\n// Shiny Button\r\n@mixin shiny($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n  $border:        adjust-color($base-color, $red: -117, $green: -111, $blue: -81);\r\n  $border-bottom: adjust-color($base-color, $red: -126, $green: -127, $blue: -122);\r\n  $fourth-stop:   adjust-color($base-color, $red: -79,  $green: -70,  $blue: -46);\r\n  $inset-shadow:  adjust-color($base-color, $red:  37,  $green:  29,  $blue:  12);\r\n  $second-stop:   adjust-color($base-color, $red: -56,  $green: -50,  $blue: -33);\r\n  $text-shadow:   adjust-color($base-color, $red: -140, $green: -141, $blue: -114);\r\n  $third-stop:    adjust-color($base-color, $red: -86,  $green: -75,  $blue: -48);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\r\n  }\r\n\r\n  @if $grayscale == true {\r\n    $border:        grayscale($border);\r\n    $border-bottom: grayscale($border-bottom);\r\n    $fourth-stop:   grayscale($fourth-stop);\r\n    $inset-shadow:  grayscale($inset-shadow);\r\n    $second-stop:   grayscale($second-stop);\r\n    $text-shadow:   grayscale($text-shadow);\r\n    $third-stop:    grayscale($third-stop);\r\n  }\r\n\r\n  @include linear-gradient(top, $base-color 0%, $second-stop 50%, $third-stop 50%, $fourth-stop 100%);\r\n\r\n  border: 1px solid $border;\r\n  border-bottom: 1px solid $border-bottom;\r\n  border-radius: 5px;\r\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: bold;\r\n  padding: $padding;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  text-shadow: 0 -1px 1px $text-shadow;\r\n\r\n  &:hover:not(:disabled) {\r\n    $first-stop-hover:  adjust-color($base-color, $red: -13, $green: -15, $blue: -18);\r\n    $second-stop-hover: adjust-color($base-color, $red: -66, $green: -62, $blue: -51);\r\n    $third-stop-hover:  adjust-color($base-color, $red: -93, $green: -85, $blue: -66);\r\n    $fourth-stop-hover: adjust-color($base-color, $red: -86, $green: -80, $blue: -63);\r\n\r\n    @if $grayscale == true {\r\n      $first-stop-hover:  grayscale($first-stop-hover);\r\n      $second-stop-hover: grayscale($second-stop-hover);\r\n      $third-stop-hover:  grayscale($third-stop-hover);\r\n      $fourth-stop-hover: grayscale($fourth-stop-hover);\r\n    }\r\n\r\n    @include linear-gradient(top, $first-stop-hover  0%,\r\n                                  $second-stop-hover 50%,\r\n                                  $third-stop-hover  50%,\r\n                                  $fourth-stop-hover 100%);\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $inset-shadow-active: adjust-color($base-color, $red: -111, $green: -116, $blue: -122);\r\n\r\n    @if $grayscale == true {\r\n      $inset-shadow-active: grayscale($inset-shadow-active);\r\n    }\r\n\r\n    box-shadow: inset 0 0 20px 0 $inset-shadow-active;\r\n  }\r\n}\r\n\r\n// Pill Button\r\n@mixin pill($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n  $border-bottom: adjust-color($base-color, $hue:  8, $saturation: -11%, $lightness: -26%);\r\n  $border-sides:  adjust-color($base-color, $hue:  4, $saturation: -21%, $lightness: -21%);\r\n  $border-top:    adjust-color($base-color, $hue: -1, $saturation: -30%, $lightness: -15%);\r\n  $inset-shadow:  adjust-color($base-color, $hue: -1, $saturation: -1%,  $lightness:  7%);\r\n  $stop-gradient: adjust-color($base-color, $hue:  8, $saturation:  14%, $lightness: -10%);\r\n  $text-shadow:   adjust-color($base-color, $hue:  5, $saturation: -19%, $lightness: -15%);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\r\n  }\r\n\r\n  @if $grayscale == true {\r\n    $border-bottom: grayscale($border-bottom);\r\n    $border-sides:  grayscale($border-sides);\r\n    $border-top:    grayscale($border-top);\r\n    $inset-shadow:  grayscale($inset-shadow);\r\n    $stop-gradient: grayscale($stop-gradient);\r\n    $text-shadow:   grayscale($text-shadow);\r\n  }\r\n\r\n  border: 1px solid $border-top;\r\n  border-color: $border-top $border-sides $border-bottom;\r\n  border-radius: 16px;\r\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: normal;\r\n  line-height: 1;\r\n  @include linear-gradient ($base-color, $stop-gradient);\r\n  padding: $padding;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  text-shadow: 0 -1px 1px $text-shadow;\r\n  background-clip: padding-box;\r\n\r\n  &:hover:not(:disabled) {\r\n    $base-color-hover:    adjust-color($base-color,                                $lightness: -4.5%);\r\n    $border-bottom:       adjust-color($base-color, $hue:  8, $saturation:  13.5%, $lightness: -32%);\r\n    $border-sides:        adjust-color($base-color, $hue:  4, $saturation: -2%,    $lightness: -27%);\r\n    $border-top:          adjust-color($base-color, $hue: -1, $saturation: -17%,   $lightness: -21%);\r\n    $inset-shadow-hover:  adjust-color($base-color,           $saturation: -1%,    $lightness:  3%);\r\n    $stop-gradient-hover: adjust-color($base-color, $hue:  8, $saturation: -4%,    $lightness: -15.5%);\r\n    $text-shadow-hover:   adjust-color($base-color, $hue:  5, $saturation: -5%,    $lightness: -22%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-hover:    grayscale($base-color-hover);\r\n      $border-bottom:       grayscale($border-bottom);\r\n      $border-sides:        grayscale($border-sides);\r\n      $border-top:          grayscale($border-top);\r\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\r\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\r\n      $text-shadow-hover:   grayscale($text-shadow-hover);\r\n    }\r\n\r\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\r\n\r\n    background-clip: padding-box;\r\n    border: 1px solid $border-top;\r\n    border-color: $border-top $border-sides $border-bottom;\r\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\r\n    cursor: pointer;\r\n    text-shadow: 0 -1px 1px $text-shadow-hover;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $active-color:         adjust-color($base-color, $hue: 4,  $saturation: -12%,  $lightness: -10%);\r\n    $border-active:        adjust-color($base-color, $hue: 6,  $saturation: -2.5%, $lightness: -30%);\r\n    $border-bottom-active: adjust-color($base-color, $hue: 11, $saturation:  6%,   $lightness: -31%);\r\n    $inset-shadow-active:  adjust-color($base-color, $hue: 9,  $saturation:  2%,   $lightness: -21.5%);\r\n    $text-shadow-active:   adjust-color($base-color, $hue: 5,  $saturation: -12%,  $lightness: -21.5%);\r\n\r\n    @if $grayscale == true {\r\n      $active-color:         grayscale($active-color);\r\n      $border-active:        grayscale($border-active);\r\n      $border-bottom-active: grayscale($border-bottom-active);\r\n      $inset-shadow-active:  grayscale($inset-shadow-active);\r\n      $text-shadow-active:   grayscale($text-shadow-active);\r\n    }\r\n\r\n    background: $active-color;\r\n    border: 1px solid $border-active;\r\n    border-bottom: 1px solid $border-bottom-active;\r\n    box-shadow: inset 0 0 6px 3px $inset-shadow-active;\r\n    text-shadow: 0 -1px 1px $text-shadow-active;\r\n  }\r\n}\r\n\r\n// Flat Button\r\n@mixin flat($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n  }\r\n\r\n  background-color: $base-color;\r\n  border-radius: 3px;\r\n  border: 0;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: bold;\r\n  padding: $padding;\r\n  text-decoration: none;\r\n  background-clip: padding-box;\r\n\r\n  &:hover:not(:disabled){\r\n    $base-color-hover:    adjust-color($base-color, $saturation: 4%, $lightness: 5%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-hover: grayscale($base-color-hover);\r\n    }\r\n\r\n    background-color: $base-color-hover;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $base-color-active: adjust-color($base-color, $saturation: -4%, $lightness: -5%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-active: grayscale($base-color-active);\r\n    }\r\n\r\n    background-color: $base-color-active;\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n// Flexible grid\r\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\r\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\r\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\r\n  @return percentage($width / $container-width);\r\n\r\n  @warn \"The flex-grid function is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n// Flexible gutter\r\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\r\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\r\n  @return percentage($gutter / $container-width);\r\n\r\n  @warn \"The flex-gutter function is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n@function grid-width($n) {\r\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\r\n\r\n  @warn \"The grid-width function is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n@function golden-ratio($value, $increment) {\r\n  @return modular-scale($increment, $value, $ratio: $golden);\r\n\r\n  @warn \"The golden-ratio function is deprecated and will be removed in the next major version release. Please use the modular-scale function, instead.\";\r\n}\r\n\r\n@mixin box-sizing($box) {\r\n  @include prefixer(box-sizing, $box, webkit moz spec);\r\n\r\n  @warn \"The box-sizing mixin is deprecated and will be removed in the next major version release. This property can now be used un-prefixed.\";\r\n}\r\n",
		"//main defualt colors\r\n$colors: (\r\n    1-primary: #112D32,\r\n    2-secondary: #E8E8E8,\r\n    3-tertiary: #F2F2F2,\r\n    4-quaternary: #308798,\r\n    5-quinary: #2e464b,\r\n    6-senary: #195460,\r\n);\r\n\r\n//adjust hsl values of all colors on webiste\r\n$global-color-adjust: (\r\n    hue: 10%,\r\n    darken: 0%,\r\n    lighten: 0%,\r\n    saturate: 0%,\r\n    desaturate: 0%\r\n);\r\n\r\n//adjust hsl values of the primary color\r\n$primary-adjust: (\r\n    hue: 0%,\r\n    darken: 0%,\r\n    lighten: 0%,\r\n    saturate: 0%,\r\n    desaturate: 0%\r\n);\r\n\r\n//adjust hsl values of the secondary color\r\n$secondary-adjust: (\r\n    hue: 0%,\r\n    darken: 0%,\r\n    lighten: 0%,\r\n    saturate: 0%,\r\n    desaturate: 0%\r\n);\r\n\r\n//adjust hsl values of the tertiary color\r\n$tertiary-adjust: (\r\n    hue: 0%,\r\n    darken: 0%,\r\n    lighten: 0%,\r\n    saturate: 0%,\r\n    desaturate: 0%\r\n);\r\n\r\n//adjust hsl values of the quaternary color\r\n$quaternary-adjust: (\r\n    hue: 0%,\r\n    darken: 0%,\r\n    lighten: 0%,\r\n    saturate: 0%,\r\n    desaturate: 0%\r\n);\r\n\r\n//adjust hsl values of the quinary color\r\n$quinary-adjust: (\r\n    hue: 0%,\r\n    darken: 0%,\r\n    lighten: 0%,\r\n    saturate: 0%,\r\n    desaturate: 0%\r\n);\r\n\r\n//adjust hsl values of the senary color\r\n$senary-adjust: (\r\n    hue: 0%,\r\n    darken: 0%,\r\n    lighten: 0%,\r\n    saturate: 0%,\r\n    desaturate: 0%\r\n);",
		"@function color-adjust($adjust, $color) {\r\n    $hue: map-get($adjust, hue);\r\n    $darken: map-get($adjust, darken);\r\n    $lighten: map-get($adjust, lighten);\r\n    $saturate: map-get($adjust, saturate);\r\n    $desaturate: map-get($adjust, desaturate);\r\n    $color: map-get($colors, $color);\r\n    \r\n    @return desaturate(saturate(tint(shade(adjust-hue($color, $hue), $darken), $lighten), $saturate), $desaturate);\r\n}\r\n\r\n@function color-adjust-global($color) {\r\n    $hue: map-get($global-color-adjust, hue);\r\n    $darken: map-get($global-color-adjust, darken);\r\n    $lighten: map-get($global-color-adjust, lighten);\r\n    $saturate: map-get($global-color-adjust, saturate);\r\n    $desaturate: map-get($global-color-adjust, desaturate);\r\n\r\n    @return desaturate(saturate(tint(shade(adjust-hue($color, $hue), $darken), $lighten), $saturate), $desaturate);\r\n}\r\n\r\n@function is-light($lightness, $light-color, $dark-color) {\r\n    @if lightness($lightness) < 50 {\r\n        @return $light-color;\r\n    }\r\n\r\n    @else {\r\n        @return $dark-color;\r\n    }\r\n}",
		"\r\n\r\n//colors    \r\n$colors-adjusted: (\r\n    1-primary: color-adjust-global(color-adjust($primary-adjust, 1-primary)),\r\n\r\n    2-secondary: color-adjust-global(color-adjust($secondary-adjust, 2-secondary)),\r\n\r\n    3-tertiary: color-adjust-global(color-adjust($tertiary-adjust, 3-tertiary)),\r\n\r\n    4-quaternary: color-adjust-global(color-adjust($quaternary-adjust, 4-quaternary)),\r\n\r\n    5-quinary: color-adjust-global(color-adjust($quinary-adjust, 5-quinary)),\r\n\r\n    6-senary: color-adjust-global(color-adjust($senary-adjust, 6-senary)),\r\n);\r\n\r\n//color variations\r\n$primary-c: (\r\n    0: map-get($colors-adjusted, 1-primary),\r\n    1: tint(map-get($colors-adjusted, 1-primary), 25%),\r\n    2: tint(map-get($colors-adjusted, 1-primary), 50%),\r\n    3: tint(map-get($colors-adjusted, 1-primary), 75%),\r\n);\r\n\r\n$secondary-c: (\r\n    0: map-get($colors-adjusted, 2-secondary),\r\n    1: shade(map-get($colors-adjusted, 2-secondary), 25%),\r\n    2: shade(map-get($colors-adjusted, 2-secondary), 50%),\r\n    3: shade(map-get($colors-adjusted, 2-secondary), 75%),\r\n);\r\n\r\n$tertiary-c: (\r\n    0: map-get($colors-adjusted, 3-tertiary),\r\n    1: shade(map-get($colors-adjusted, 3-tertiary), 25%),\r\n    2: shade(map-get($colors-adjusted, 3-tertiary), 50%),\r\n    3: shade(map-get($colors-adjusted, 3-tertiary), 75%),\r\n);\r\n\r\n$quaternary-c: (\r\n    0: map-get($colors-adjusted, 4-quaternary),\r\n    1: tint(map-get($colors-adjusted, 4-quaternary), 25%),\r\n    2: tint(map-get($colors-adjusted, 4-quaternary), 50%),\r\n    3: tint(map-get($colors-adjusted, 4-quaternary), 75%),\r\n);\r\n\r\n$quinary-c: (\r\n    0: map-get($colors-adjusted, 5-quinary),\r\n    1: tint(map-get($colors-adjusted, 5-quinary), 25%),\r\n    2: tint(map-get($colors-adjusted, 5-quinary), 50%),\r\n    3: tint(map-get($colors-adjusted, 5-quinary), 75%),\r\n);\r\n\r\n$senary-c: (\r\n    0: map-get($colors-adjusted, 6-senary),\r\n    1: tint(map-get($colors-adjusted, 6-senary), 25%),\r\n    2: tint(map-get($colors-adjusted, 6-senary), 50%),\r\n    3: tint(map-get($colors-adjusted, 6-senary), 75%),\r\n);\r\n\r\n\r\n\r\n//navbar colors\r\n$nav: (\r\n    bg-color: map-get($quinary-c,  0),\r\n    link-color: map-get($secondary-c, 0)\r\n);\r\n\r\n//section colors\r\n$section: (\r\n    primary: map-get($primary-c, 0),\r\n    secondary: map-get($secondary-c, 0),\r\n    tertiary: map-get($tertiary-c, 0)\r\n);\r\n\r\n//typography colors\r\n$typography: (\r\n    main-title-color: map-get($tertiary-c, 0),\r\n    sub-title-color: map-get($secondary-c, 3),\r\n    tertiary-title-color: map-get($quinary-c, 1),\r\n    text-color: map-get($tertiary-c, 2),\r\n    link-color: map-get($quaternary-c, 1),\r\n    link-hover-color: saturate(map-get($primary-c,  0), 50%), //saturate()\r\n    brand: map-get($secondary-c, 0)\r\n);\r\n\r\n//skill card colors\r\n$skill-card: (\r\n    title-color: map-get($primary-c, 0),\r\n    sub-title-color: map-get($tertiary-c, 3),\r\n    underline-color: map-get($secondary-c, 1),\r\n    is-logo-light: false //false dark, true light\r\n);\r\n\r\n//project card colors \r\n$project-card: (\r\n    bg-color: map-get($quaternary-c, 0),\r\n    main-title-color: map-get($secondary-c, 0),\r\n    sub-title-color: map-get($quaternary-c, 3)\r\n);\r\n\r\n//button colors & sizes\r\n$button: (\r\n    secondary-color: map-get($secondary-c, 0),\r\n    secondary-hover-color: map-get($primary-c, 0),\r\n    primary-color: map-get($primary-c, 0),\r\n    primary-hover-color: map-get($secondary-c, 0),\r\n\r\n    size-lg-font-size: 2.2rem,\r\n    size-lg-padding: 1.5rem 3rem,\r\n\r\n    size-md-font-size: 2rem,\r\n    size-md-padding: 1.25rem 2.5rem,\r\n\r\n    size-sm-font-size: 1.8rem,\r\n    size-sm-padding: 1rem 2rem,\r\n);\r\n\r\n//input text colors\r\n$text-input: (\r\n    bg-color: map-get($quaternary-c, 0),\r\n    label-color: map-get($secondary-c, 0),\r\n\r\n    bg-color-active: map-get($quaternary-c, 2),\r\n    label-color-active: map-get($secondary-c, 2),\r\n\r\n    text-color: map-get($secondary-c, 2),\r\n    placeholder-color: map-get($primary-c, 3)\r\n);\r\n\r\n//textarea colors\r\n$text-area: (\r\n    bg-color: map-get($senary-c, 3),\r\n    font-color: map-get($secondary-c, 2)\r\n);\r\n\r\n//social colors\r\n$social: (\r\n    tg-btn-bg-color: map-get($quaternary-c, 0),\r\n    icon-bg-color: map-get($quaternary-c, 0)\r\n);\r\n\r\n//footer colors\r\n$footer: (\r\n    bg-color: map-get($primary-c, 0),\r\n    font-color: map-get($tertiary-c, 0)\r\n);\r\n\r\n//sidebar colors\r\n$sidebar: (\r\n    header-bg-color: map-get($quinary-c, 0),\r\n    footer-bg-color: map-get($senary-c, 0),\r\n    tg-btn-color: map-get($secondary-c, 0),\r\n    link-color: map-get($secondary-c, 0)\r\n);\r\n\r\n\r\n\r\n//misc\r\n    //tranisition default\r\n    $ts: all 300ms ease 0s;\r\n\r\n    //utilities margin sizes\r\n    $u-margin: (\r\n        sm: 2rem,\r\n        md: 4rem,\r\n        lg: 6rem\r\n    );\r\n\r\n    //media break points\r\n    $media-break-point: (\r\n        desktop: 1488px,\r\n        tablet: 1024px,\r\n        mobile: 591px,\r\n    );\r\n\r\n    //font family\r\n    $arvo-ff: 'Arvo', serif;\r\n    $oswald-ff: 'Oswald', sans-serif;\r\n    $brand-ff: 'Unica One', cursive;",
		"//media queries\r\n@mixin media-break ($max-min, $value) {\r\n    @media only screen and (#{$max-min}-width: #{$value} ) {\r\n        @content;\r\n    }\r\n};\r\n\r\n@mixin media-break-point ($type) {\r\n    @if $type == desktop-large {\r\n        @include media-break(min, map-get($media-break-point, desktop)) {\r\n            @content;\r\n        }\r\n    }\r\n\r\n    @if $type == desktop {\r\n        @include media-break(max, map-get($media-break-point, desktop)) {\r\n            @content;\r\n        }\r\n    }\r\n\r\n    @if $type == tablet {\r\n        @include media-break(max, map-get($media-break-point, tablet)) {\r\n            @content;\r\n        }\r\n    }\r\n\r\n    @if $type == mobile {\r\n        @include media-break(max, map-get($media-break-point, mobile)) {\r\n            @content;\r\n        }\r\n    }\r\n\r\n    @if $type == mobile-h {\r\n        @media screen and (max-height: #{map-get($media-break-point, mobile)}){\r\n            @content;\r\n        }\r\n    }\r\n\r\n    @if $type == touch {\r\n        @media only screen and (hover: hover) {\r\n            @content;\r\n        }\r\n    }\r\n};\r\n\r\n@mixin gradient ($type, $shape, $colors...) {\r\n    @if($type == linear) {\r\n        background-image: linear-gradient($shape, $colors);\r\n    }\r\n\r\n    @if($type == radial) {\r\n        background-image: radial-gradient($shape, $colors);\r\n    }\r\n};",
		"@import \"2-reset\";\r\n@import \"3-base\";\r\n@import \"4-utilities\";\r\n@import \"5-typography\";\r\n@import \"6-animations\";",
		"/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}",
		":root {\r\n    @include media-break-point(desktop-large) {\r\n        font-size: 90%;\r\n    };\r\n\r\n    @include media-break-point(desktop) {\r\n        font-size: 62.5%;\r\n    };\r\n\r\n    @include media-break-point(tablet) {\r\n        font-size: 50%;\r\n    };\r\n\r\n    /* \r\n    @include media-break-point(mobile) {\r\n        font-size: 50%;\r\n    }; \r\n    */\r\n}\r\n\r\na {\r\n    color: black;\r\n    text-decoration: none;\r\n}\r\n\r\n*, *::before, *::after {\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    backface-visibility: hidden;\r\n}\r\n\r\ninput, button, textarea {\r\n    border: none;\r\n    outline: none;\r\n}\r\n\r\ninput, label, button, a, textarea {\r\n    display: block;\r\n    display: block;\r\n    margin: 0px;\r\n    padding: 0px;\r\n}",
		".u-container {\r\n    width: 100%;\r\n    max-width: 95rem;\r\n    margin: auto;\r\n}\r\n\r\n.u-margin {\r\n    &-auto {\r\n        margin: auto;\r\n    }\r\n\r\n    &-sm {\r\n        &-top {\r\n            margin-top: map-get($u-margin, sm);\r\n        }\r\n\r\n        &-bottom {\r\n            margin-bottom: map-get($u-margin, sm);\r\n        }\r\n    }\r\n\r\n    &-md {\r\n        &-top {\r\n            margin-top: map-get($u-margin, md);\r\n        }\r\n\r\n        &-bottom {\r\n            margin-bottom: map-get($u-margin, md);\r\n        }\r\n    }\r\n\r\n    &-lg {\r\n        &-top {\r\n            margin-top: map-get($u-margin, lg);\r\n        }\r\n\r\n        &-bottom {\r\n            margin-bottom: map-get($u-margin, lg);\r\n        }\r\n\r\n    }\r\n}\r\n\r\n.u-text {\r\n    &-align {\r\n        &-center {\r\n            text-align: center;\r\n        }\r\n\r\n        &-left {\r\n            text-align: left;\r\n        }\r\n    }\r\n}",
		".main-title {\r\n    font-size: 4rem;\r\n    font-family: $oswald-ff;\r\n    letter-spacing: 3px;\r\n    text-transform: capitalize;\r\n    text-align: center;\r\n    font-weight: bolder;\r\n    color: map-get($typography, main-title-color);\r\n}\r\n\r\n.sub-title {\r\n    font-size: 3.2rem;\r\n    font-family: $oswald-ff;\r\n    letter-spacing: 3px;\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    font-weight: lighter;\r\n    color: map-get($typography, sub-title-color);\r\n\r\n    &::before {\r\n        content: \"\";\r\n        @include position(absolute, -2rem 0px null 0px);\r\n        transform: translateX(0%);\r\n        width: 15rem;\r\n        height: 0.2rem;\r\n        margin: auto;\r\n        background-color: map-get($typography , sub-title-color)\r\n    }\r\n}\r\n\r\n.tertiary-title {\r\n    font-size: 2.8rem;\r\n    font-family: $oswald-ff;\r\n    letter-spacing: 3px;\r\n    text-transform: capitalize;\r\n    text-align: center;\r\n    font-weight: lighter;\r\n    color: map-get($typography, tertiary-title-color);\r\n}\r\n\r\n.text {\r\n    font-size: 1.7rem;\r\n    line-height: 2.5rem;\r\n    letter-spacing: 2px;\r\n    word-spacing: 3px;\r\n    color: map-get($typography, text-color); \r\n    font-family: $arvo-ff;\r\n    font-weight: lighter;\r\n}\r\n\r\n.link {\r\n    font-family: $arvo-ff;\r\n    font-size: 1.7rem;\r\n    color: map-get($typography, link-color);\r\n    cursor: pointer; \r\n    display: inline;\r\n    text-transform: capitalize;\r\n    transition: $ts;\r\n    \r\n    &::before {\r\n        content: \"\";\r\n        @include position(absolute, null 0px -4px 0px);\r\n        height: 0.1rem;\r\n        background-color: map-get($typography, link-hover-color);\r\n        transform: scaleX(0);\r\n        transition: $ts;\r\n        transform-origin: left;\r\n    }\r\n    \r\n    &:hover, &:active {\r\n        transition: $ts;\r\n        color: map-get($typography, link-hover-color);\r\n        &::before {\r\n            transition: $ts;\r\n            transform: scaleX(1);\r\n        }\r\n    }\r\n}",
		"@keyframes splash {\r\n    0% {\r\n        opacity: 1;\r\n        transform: scale(0);\r\n    }\r\n\r\n    100% {\r\n        opacity: 0;\r\n        transform: scale(2);\r\n    }\r\n}",
		"@import \"brand\";\r\n@import \"section\";\r\n@import \"img-box\";\r\n@import \"skill-card\";\r\n@import \"project-card\";\r\n@import \"button\";\r\n@import \"text-input\";\r\n@import \"text-area\";\r\n@import \"social\";",
		".brand {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    \r\n    &__img-box {\r\n        width: 100%;\r\n        max-width: 8rem;\r\n    }\r\n\r\n    &__img {\r\n        display: block;\r\n        width: 100%;\r\n        margin: auto;\r\n    }\r\n\r\n    &__name {\r\n        padding: 1.5rem;\r\n        font-size: 3rem;\r\n        letter-spacing: 20px;\r\n        text-transform: uppercase;\r\n        font-family: $brand-ff;\r\n        font-weight: bolder;\r\n        color: map-get($typography, brand);\r\n\r\n        @include media-break-point(mobile) {\r\n            font-size: 2rem;\r\n        };\r\n\r\n        @include media-break-point(mobile-h) {\r\n            font-size: 2rem;\r\n        };\r\n    }\r\n}",
		"$primary: map-get($section, primary);\r\n$secondary: map-get($section, secondary);\r\n$tertiary: map-get($section, tertiary);\r\n\r\n.section {\r\n    padding-bottom: 5rem;\r\n    padding-top: 12rem;\r\n    padding-left: 15rem;\r\n    padding-right: 15rem;\r\n\r\n    z-index: 0;\r\n\r\n    @include media-break-point(tablet) {\r\n        padding-left: 3rem;\r\n        padding-right: 3rem;\r\n        padding-top: 18rem;\r\n    };\r\n\r\n    @include media-break-point(mobile) {\r\n        padding-left: 1.7rem;\r\n        padding-right: 1.7rem;\r\n        padding-top: 7rem;\r\n    };\r\n\r\n    &--color {\r\n        &-primary {\r\n            background-color: $primary;\r\n            @include gradient(radial, circle, \r\n                                is-light($primary, \r\n                                    tint($primary, 10%), \r\n                                    shade($primary, 10%)), \r\n                                $primary 70%);   \r\n        }\r\n\r\n        &-secondary {\r\n            background-color: $secondary;\r\n        }\r\n\r\n        &-tertiary {\r\n            background-color: $tertiary;\r\n        }\r\n    }\r\n}",
		".img-box {\r\n    width: 100%;\r\n    height: 100%;\r\n    max-width: 32rem;\r\n    max-height: 32rem;\r\n    overflow: hidden;\r\n    margin: auto;\r\n\r\n    &--round {\r\n        border-radius: 100%;\r\n    }\r\n\r\n    &__img{\r\n        display: block;\r\n        height: 100%;\r\n        width: 100%;\r\n        object-fit: cover;\r\n    }\r\n}",
		"$title-color: map-get($skill-card, title-color);\r\n$sub-title-color: map-get($skill-card, sub-title-color);\r\n$underline-color: map-get($skill-card, underline-color);\r\n\r\n.skill-container {\r\n    display: grid;\r\n    grid-template-areas: \"one two three\";\r\n    justify-items: center;\r\n\r\n    @include media-break(max, 1150px) {\r\n        grid-template-areas: \r\n            \"one two\"\r\n            \"three three\";\r\n        justify-items: center;\r\n        justify-content: stretch;\r\n    };\r\n\r\n    @include media-break-point(tablet) {\r\n        grid-template-areas:\r\n            \"one\"\r\n            \"two\"\r\n            \"three\";\r\n        \r\n        text-align: center;\r\n    };\r\n}\r\n\r\n.skill-card {\r\n    width: 100%;\r\n    max-width: 27rem;\r\n    padding: 1rem;\r\n\r\n    @include media-break(max, 1150px) {\r\n        max-width: 100%;\r\n        padding: 0px 4rem;\r\n    }\r\n\r\n    @include media-break-point(tablet) {\r\n        padding: 0px 2rem;\r\n        margin-bottom: 12rem;\r\n    };\r\n\r\n    &__img-box {\r\n        width: 100%;\r\n        max-width: 16rem;\r\n        margin: auto;\r\n        margin-bottom: 6rem;\r\n    }\r\n\r\n    &__img {\r\n        width: 100%;\r\n        margin: auto;\r\n\r\n        @if(map-get($skill-card, is-logo-light)) {\r\n            filter: invert(100%);\r\n        }\r\n    }\r\n\r\n    &__title {\r\n        font-family: $oswald-ff;\r\n        text-transform: uppercase;\r\n        font-size: 2.5rem;\r\n        word-spacing: 3px;\r\n        letter-spacing: 1px;\r\n        text-align: center;\r\n        color: $title-color;\r\n        \r\n        &::before {\r\n            content: \"\";\r\n            @include position(absolute, null 0px -2rem 0px);\r\n            height: 0.3rem;\r\n            background-color: $underline-color;\r\n        }\r\n    }\r\n\r\n    &__header {\r\n        margin-bottom: 3.5rem;\r\n    }\r\n\r\n    &__footer {\r\n        margin-bottom: 3rem; \r\n    }\r\n\r\n    &__sub-title {\r\n        font-size: 2rem;\r\n        font-family: $oswald-ff;\r\n        word-spacing: 2px;\r\n        letter-spacing: 1px;\r\n        color: $sub-title-color;\r\n        text-transform: capitalize;\r\n\r\n        &:not(:last-child) {\r\n            margin-bottom: 2rem;\r\n        }\r\n    }\r\n\r\n    &__section {\r\n        &:not(:last-child) {\r\n            margin-bottom: 4rem;\r\n        }\r\n    }\r\n\r\n    &__link {\r\n        line-height: 3rem;\r\n\r\n        &::after {\r\n            content: \",\";\r\n            display: block;\r\n            @include position(absolute, null -0.2rem -.7rem null);\r\n        }\r\n\r\n        &:last-child::after {\r\n            content: \".\"; \r\n            right: -0.35rem;\r\n        }\r\n\r\n        &:not(:last-child) {\r\n            margin-right: 1rem;\r\n        }\r\n    }\r\n\r\n    &__1 {\r\n        grid-area: one;\r\n    }\r\n\r\n    &__2 {\r\n        grid-area: two;\r\n    }\r\n\r\n    &__3 {\r\n        grid-area: three;\r\n    }\r\n}",
		"$bg-color: map-get($project-card, bg-color);\r\n$main-title-color: map-get($project-card, main-title-color);\r\n$sub-title-color: map-get($project-card, sub-title-color);\r\n\r\n.project-card {\r\n    max-width: 35rem;\r\n    width: 100%;\r\n    height: 23rem;\r\n\r\n    @include media-break-point(tablet) {\r\n        margin: auto;\r\n        margin-bottom: 4rem;\r\n        max-width: 100%;\r\n        height: 36rem;\r\n    };\r\n\r\n    @include media-break-point(mobile) {\r\n        margin: auto;\r\n        margin-bottom: 4rem;\r\n        height: 60rem;\r\n        max-width: 40rem;\r\n    };\r\n\r\n    &:hover {\r\n        .project-card__container {\r\n            transition: $ts;\r\n            transform: rotateY(180deg);\r\n\r\n            @include media-break-point(tablet) {\r\n                transform: none;\r\n            };\r\n        }\r\n    }\r\n\r\n    &__container {\r\n        width: 100%;\r\n        height: 100%;\r\n        transform-style: preserve-3d;\r\n        backface-visibility: visible;\r\n        transition: $ts;\r\n\r\n        @include media-break-point(tablet) {\r\n            border: solid 1rem $bg-color;\r\n        };\r\n    }\r\n\r\n    &__front, &__back {\r\n        @include position(absolute, 0px 0px 0px 0px);\r\n    }\r\n\r\n    &__back {\r\n        background-color: $bg-color;    \r\n        @include gradient(radial, circle, \r\n            is-light($bg-color, \r\n                tint($bg-color, 20%), \r\n                shade($bg-color, 20%) ), \r\n            $bg-color 70%);\r\n            background-size: contain;\r\n\r\n        padding: 2.5rem;\r\n        text-align: center;\r\n        transform: rotateY(180deg);\r\n\r\n        @include media-break-point(tablet) {\r\n            top: 0px;\r\n            right: 0px;\r\n            left: auto;\r\n            bottom: auto;\r\n            width: 50%;\r\n            height: 100%;\r\n            transform: rotateX(0deg);\r\n            text-align: left;\r\n        };\r\n\r\n        @include media-break-point(mobile) {\r\n            width: 100%;\r\n            height: 50%;\r\n            \r\n            top: 50%;\r\n            left: 0px;\r\n            \r\n            text-align: center;\r\n        };\r\n    }\r\n\r\n    &__front {\r\n        overflow: hidden;\r\n\r\n        @include media-break-point(tablet) {\r\n            top: 0px;\r\n            right: auto;\r\n            left: 0px;\r\n            bottom: auto;\r\n            width: 50%;\r\n            height: 100%;\r\n        };\r\n\r\n        @include media-break-point(mobile) {\r\n            width: 100%;\r\n            height: 50%;\r\n            \r\n            top: 0px;\r\n            left: 0px;\r\n        };\r\n    }\r\n\r\n    &__img {\r\n        width: 100%;\r\n    }\r\n\r\n    &__main-title {\r\n        font-family: $oswald-ff;\r\n        color: $main-title-color;\r\n        font-size: 2.5rem;\r\n        font-weight: bolder;\r\n        text-transform: capitalize;\r\n        margin-bottom: 2rem;\r\n    }\r\n\r\n    &__sub-title {\r\n        font-family: $oswald-ff;\r\n        color: $sub-title-color;\r\n        font-size: 2.15rem;\r\n        font-weight: lighter;\r\n        text-transform: capitalize;\r\n    }\r\n}",
		".btn {\r\n    display: inline-block;\r\n    font-family: $arvo-ff;\r\n    text-transform: uppercase;\r\n    font-weight: lighter;\r\n    transition: $ts;\r\n    margin: auto 1rem;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    letter-spacing: 1.5px;\r\n    word-spacing: 3px;\r\n\r\n    &::before {\r\n        content: \"\";\r\n        @include position(absolute, -2.5px -2.5px -2.5px -2.5px);\r\n        z-index: -1;\r\n        transform: scale(0);\r\n    }\r\n    \r\n    &:first-child {\r\n        margin-left: 0px;\r\n    }\r\n\r\n    &:last-child {\r\n        margin-right: 0px;\r\n    }\r\n\r\n    &:hover {\r\n        transition: $ts;\r\n        transform: scale(1.05);\r\n    }\r\n\r\n    &:active {\r\n        transition: $ts;\r\n        transform: scale(1.1);\r\n\r\n        &::before {\r\n            animation: splash .3s ease 0s 1 normal forwards;\r\n        }\r\n    }\r\n\r\n    //colors\r\n    &--c {\r\n        &-sec {\r\n            background-color: transparent;\r\n            border: 2.5px solid map-get($button, secondary-color);\r\n            color: map-get($button, secondary-color);\r\n            background-image: \r\n                linear-gradient(112deg,  \r\n                    transparent 0%, \r\n                    transparent 50%, \r\n                    map-get($button, secondary-color) 50%);\r\n            background-size: 210%;\r\n            transition: $ts;\r\n            transition-duration: 600ms;\r\n\r\n            &::before {\r\n                background-color: map-get($button, secondary-color);\r\n            }\r\n    \r\n            &:hover {\r\n                transition: $ts;\r\n                transition-duration: 600ms;\r\n                color: map-get($button, secondary-hover-color);\r\n            }\r\n        }\r\n\r\n        &-prim {\r\n            background-color: transparent;\r\n            border: 2.5px solid map-get($button, primary-color);\r\n            color: map-get($button, primary-color);\r\n            background-image: \r\n                linear-gradient(112deg,  \r\n                    transparent 0%, \r\n                    transparent 50%, \r\n                    map-get($button, primary-color) 50%);\r\n            background-size: 210%;\r\n            transition: $ts;\r\n            transition-duration: 600ms;\r\n            &::before {\r\n                background-color: map-get($button, primary-color);\r\n            }\r\n    \r\n            &:hover {\r\n                transition: $ts;\r\n                transition-duration: 600ms;\r\n                color: map-get($button, primary-hover-color);\r\n            }\r\n        }\r\n    }\r\n\r\n    //sizes\r\n    &--s {\r\n        &-lg {\r\n            padding: map-get($button, size-lg-padding);\r\n            font-size: map-get($button, size-lg-font-size);\r\n            &:hover {\r\n                background-position: 100%;\r\n            }\r\n        }\r\n\r\n        &-md {\r\n            padding: map-get($button, size-md-padding);\r\n            font-size: map-get($button, size-md-font-size);\r\n            &:hover {\r\n                background-position: 99%;\r\n            }\r\n        }\r\n\r\n        &-sm {\r\n            padding: map-get($button, size-sm-padding);\r\n            font-size: map-get($button, size-sm-font-size);\r\n            &:hover {\r\n                background-position: 99%;\r\n            }\r\n        }\r\n    }\r\n\r\n    //diffrent types\r\n    &--fill {\r\n        &.btn--c {\r\n            &-sec {\r\n                background-color: map-get($button, secondary-color);\r\n                color: map-get($button, secondary-hover-color);\r\n                &:hover {\r\n                    filter: brightness(75%);\r\n                }  \r\n            }\r\n            \r\n            &-prim {\r\n                background-color: map-get($button, primary-color);\r\n                color: map-get($button, primary-hover-color);\r\n                \r\n                &:hover {\r\n                    filter: brightness(125%);\r\n                }   \r\n            }\r\n        }\r\n    }\r\n\r\n    &--round {\r\n        border-radius: 25%/100%;\r\n        \r\n        &::before {\r\n            border-radius: 25%/100%;\r\n        }\r\n    }\r\n\r\n    &--outline {\r\n        background-image: none;\r\n        background-image: transparent;\r\n\r\n        &.btn--c {\r\n            &-sec {\r\n                color: map-get($button, secondary-color);\r\n            }\r\n\r\n            &-prim {\r\n                color: map-get($button, primary-color);\r\n            }\r\n        }\r\n    }\r\n}",
		"$bg-color: map-get($text-input, bg-color);\r\n$label-color: map-get($text-input, label-color);\r\n\r\n$bg-color-active: map-get($text-input, bg-color-active);\r\n$label-color-active: map-get($text-input, label-color-active);\r\n\r\n$text-color: map-get($text-input, text-color);\r\n$placeholder-color: map-get($text-input, placeholder-color);\r\n\r\n.text-input {\r\n    width: 30rem;\r\n    \r\n    &__input {\r\n        width: 100%;\r\n        padding: 1.15rem 1.25rem;\r\n        font-family: $arvo-ff;\r\n        letter-spacing: 2px;\r\n        font-size: 2rem;\r\n        background-color: transparent;\r\n        background-color: $bg-color;\r\n        transition: $ts;\r\n        color: $text-color;\r\n        \r\n        &::placeholder {\r\n            user-select: none;\r\n            transition: $ts;\r\n            color: $placeholder-color;\r\n            font-size: 1.5rem;\r\n            font-family: $arvo-ff;\r\n            text-transform: capitalize;\r\n            font-weight: lighter;\r\n            letter-spacing: 3px;\r\n            word-spacing: 6px;\r\n\r\n            @include media-break-point(mobile) {\r\n                text-align: center;\r\n            };\r\n        }\r\n    }\r\n\r\n    &__label {\r\n        @include position(absolute, 50% null null 0px);\r\n        transform: translateY(-50%) scale(1);\r\n        color: $label-color;\r\n        font-size: 1.5rem;\r\n        font-family: $arvo-ff;\r\n        text-transform: capitalize;\r\n        font-weight: lighter;\r\n        letter-spacing: 3px;\r\n        word-spacing: 6px;\r\n        margin-left: 1.25rem;\r\n        transition: $ts;\r\n        transform-origin: left;\r\n        opacity: 0;\r\n        cursor: text;\r\n    }\r\n\r\n    //on change\r\n    &__input {\r\n        &:focus, &:valid {\r\n            transition: $ts;\r\n            background-color: $bg-color-active;\r\n\r\n            &::placeholder {\r\n                transition: $ts;\r\n                color: transparent;\r\n                font-size: 1.5rem;\r\n                font-family: $arvo-ff;\r\n                text-transform: capitalize;\r\n                font-weight: lighter;\r\n                letter-spacing: 3px;\r\n                word-spacing: 6px;\r\n            }\r\n\r\n            & ~ .text-input__label {\r\n                transition: $ts;\r\n                transform: translateY(-300%) scale(0.75);\r\n                color: $label-color-active;\r\n                opacity: 1;\r\n            }\r\n        }\r\n    }\r\n}",
		"$bg-color: map-get($text-area, bg-color);\r\n$font-color: map-get($text-area, font-color);\r\n\r\n.text-area {\r\n    width: 100%;\r\n    min-height: 25rem;\r\n    padding: 2rem 3rem;\r\n    resize: vertical;\r\n    background-color: $bg-color;\r\n    font-family: $arvo-ff;\r\n    font-weight: lighter;\r\n    word-spacing: 6px;\r\n    letter-spacing: 1.5px;\r\n    color: $font-color;\r\n}",
		"$tg-btn-bg-color: map-get($social, tg-btn-bg-color);\r\n$icon-bg-color: map-get($social, icon-bg-color);\r\n\r\n$tg-btn-radius: 6.2rem;\r\n$icon-radius: 4.3rem;\r\n\r\n$icons-array-length: 4;\r\n$icon-animation-delay: 0.1s;\r\n\r\n\r\n\r\n.social {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    user-select: none;\r\n    @include position(fixed, null 0px 8rem null);\r\n    z-index: 1;\r\n\r\n    @include media-break-point(tablet) {\r\n        display: none;\r\n    };\r\n\r\n    &__input {\r\n        display: none;\r\n    }\r\n\r\n    &__tg-btn {\r\n        width: $tg-btn-radius;\r\n        height: $tg-btn-radius;\r\n        border-radius: 100%;\r\n\r\n        margin: 1rem 6rem;\r\n        cursor: pointer;\r\n\r\n        order: 2;\r\n        transition: $ts;\r\n\r\n        &::after {\r\n            content: \"\";\r\n            @include position(absolute, 0px 0px 0px 0px);\r\n            background-color: $icon-bg-color;\r\n            border-radius: 100%;\r\n            transform: scale(0);\r\n            z-index: -1;\r\n        }\r\n\r\n        &:active {\r\n            &::after {\r\n                animation: splash .35s ease 0s 1 normal forwards;\r\n                animation-play-state: running;\r\n            }\r\n        }\r\n\r\n        z-index: 1;\r\n    }\r\n\r\n    &__icons {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        order: 1;\r\n        visibility: hidden;\r\n        z-index: 0;\r\n    }\r\n\r\n    &__icon {\r\n        width: $icon-radius;\r\n        height: $icon-radius;\r\n        border-radius: 100%;\r\n\r\n        margin: 1.35rem 6rem;\r\n\r\n        opacity: 0;\r\n        transition: $ts;\r\n        transform: translateY(200%);\r\n\r\n        @for $i from 1 to ($icons-array-length + 1) {\r\n            &:nth-child(#{$i}) {\r\n                transition-delay: $icon-animation-delay * $i;\r\n                z-index: $i;\r\n            }\r\n        }\r\n\r\n        &::after {\r\n            content: \"\";\r\n            @include position(absolute, 0px 0px 0px 0px);\r\n            background-color: map-get($social, icon-bg-color);\r\n            border-radius: 100%;\r\n            transform: scale(0);\r\n            z-index: -1;\r\n        }\r\n\r\n        &:active {\r\n            &::after {\r\n                animation: splash .35s ease 0s 1 normal forwards;\r\n                animation-play-state: running;\r\n            }\r\n        }\r\n    }\r\n\r\n    &__tg-btn, &__icon {\r\n        background-color: $tg-btn-bg-color;\r\n        @include gradient(radial, circle, \r\n                        is-light($tg-btn-bg-color,\r\n                        tint($tg-btn-bg-color, 20%), \r\n                        shade($tg-btn-bg-color, 20%)) 0%,\r\n                        $tg-btn-bg-color);\r\n        background-size: contain;\r\n        background-position: center;\r\n    }\r\n\r\n    &__img {\r\n        display: block;\r\n        width: 50%;\r\n        @include position(absolute, 0px 0px 0px 0px);\r\n        margin: auto;\r\n\r\n        @if( lightness($tg-btn-bg-color) < 50%) {\r\n           filter: invert(90%);\r\n        }\r\n\r\n        @else {\r\n            filter: invert(10%);\r\n        }\r\n    }\r\n\r\n    //toggle active\r\n    &__input:checked ~ {\r\n        .social__icons {\r\n            visibility: visible;\r\n\r\n            .social__icon {\r\n                transition: $ts;\r\n                opacity: 1;\r\n                transform: translateY(0%);\r\n            }\r\n\r\n            @for $i from 1 to ($icons-array-length + 1) {\r\n                .social__icon:nth-child(#{$i}) {\r\n                    transition-delay: $icon-animation-delay * ($icons-array-length + 1 - $i);\r\n                }\r\n            }\r\n        }   \r\n    }\r\n}",
		"@import \"2-navbar\";\r\n@import \"3-sidebar\";\r\n@import \"4-projects\";\r\n@import \"5-form\";\r\n@import \"6-footer\";",
		"$bg-color: map-get($nav, bg-color);\r\n$link-color: map-get($nav, link-color);\r\n\r\n.nav {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    user-select: none;\r\n    position: fixed;\r\n    top: 0px;\r\n    left: 0px;\r\n    width: 100%;\r\n    z-index: 1;\r\n\r\n    @include media-break-point(tablet){\r\n        display: none;\r\n    };    \r\n\r\n    &::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        background-color: $bg-color;\r\n    }\r\n\r\n    &__list {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: stretch;\r\n    }\r\n\r\n    &__item {\r\n        &::before {\r\n            content: \"\";\r\n            @include position(absolute, null 1rem 1rem 1rem);\r\n            height: 0.5rem;\r\n            background-color: map-get($nav, link-color);\r\n            transform: scaleX(0);\r\n            transition: $ts;\r\n        }\r\n\r\n        &:hover {\r\n            &::before {\r\n                transition: $ts;\r\n                transform: scaleX(1);\r\n            }\r\n        }\r\n    }\r\n\r\n    &__link {\r\n        font-family: $oswald-ff;\r\n        font-size: 2.2rem;\r\n        padding: 3rem 2rem;\r\n        word-spacing: 4px;\r\n        letter-spacing: 2px;\r\n        color: $link-color;\r\n        transform-origin: bottom;\r\n        transition: $ts;\r\n\r\n        &::first-letter {\r\n            text-transform: capitalize;\r\n        }\r\n    }\r\n\r\n    &__item:hover .nav__link{\r\n        transition: $ts;\r\n        transform: scale(1.1) translateY(-0.5rem);        \r\n    }\r\n}",
		"$header-bg-color: map-get($sidebar, header-bg-color);\r\n$footer-bg-color: map-get($sidebar, footer-bg-color);\r\n$tg-btn-color: map-get($sidebar, tg-btn-color);\r\n$link-color: map-get($sidebar, link-color);\r\n\r\n.sidebar {\r\n    position: static;\r\n\r\n    @include media-break-point(desktop-large) {\r\n        display: none;\r\n    };\r\n\r\n    @include media-break-point(desktop) {\r\n        display: none;\r\n    };\r\n\r\n    @include media-break-point(tablet) {\r\n        display: block;\r\n    };\r\n\r\n    &__header {\r\n        &::before {\r\n            content: \"\";\r\n            @include position(absolute, 0px 0px 0px 0px);\r\n            background-color: $header-bg-color;\r\n        }\r\n        padding: 2rem;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        @include position(fixed, 0px null null 0px);\r\n        width: 100%;\r\n        z-index: 3;\r\n        padding-right: 3rem;\r\n\r\n        @include media-break-point(mobile) {\r\n            bottom: 0px;\r\n            top: auto;\r\n            padding: 1rem;\r\n        };\r\n\r\n        @include media-break-point(mobile-h) {\r\n            bottom: 0px;\r\n            top: auto;\r\n            padding: 1rem;\r\n        };\r\n    }\r\n\r\n    &__tg-btn {\r\n        display: block;\r\n        width: 5rem;\r\n        height: 5rem;\r\n        margin: auto;\r\n        cursor: pointer;\r\n\r\n        &-elem {\r\n            height: 4px;\r\n            width: 5rem;\r\n            margin: auto;\r\n            margin-top: 1rem;\r\n            background-color: $tg-btn-color;\r\n\r\n            @include media-break-point(mobile) {\r\n                height: 3px;\r\n                width: 4rem;\r\n                margin-top: .75rem;\r\n            };\r\n\r\n            &:first-child {\r\n                margin-top: 0px;\r\n            }\r\n        }\r\n    }\r\n\r\n    &__input {\r\n        display: block;\r\n        position: fixed;\r\n        z-index: 200;\r\n    }\r\n\r\n    &__footer {\r\n        @include position(fixed, 10rem 0px 0px null);\r\n        z-index: 2;\r\n\r\n        &::before {\r\n            content: \"\";\r\n            @include position(absolute, 0px 0px null null);\r\n            height: 150%;\r\n            width: 100%;\r\n            background-color: $footer-bg-color;\r\n            @include gradient(linear, 90deg, \r\n                        $footer-bg-color, \r\n                        is-light($footer-bg-color,\r\n                                tint($footer-bg-color, 15%),\r\n                                shade($footer-bg-color, 15%))\r\n                        );\r\n        }\r\n\r\n        box-shadow: 0px 0px 0px 1000vh rgba(0, 0, 0, 0.0);\r\n\r\n\r\n        width: 30rem;\r\n        transform: translateX(100%);\r\n        transition: $ts;\r\n        transition-duration: .7s;\r\n        overflow-y: auto;\r\n\r\n        @include media-break-point(mobile) {\r\n            @include position(fixed, 0px 0px 6.9rem 0px);\r\n            width: auto;\r\n            \r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: flex-end;\r\n         \r\n        };\r\n\r\n        @include media-break-point(mobile-h) {\r\n            @include position(fixed, 0px 0px 6.9rem 0px);\r\n            width: auto;\r\n            \r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: flex-end;\r\n            overflow-y: hidden;\r\n        };\r\n    }\r\n\r\n    &__link {\r\n        font-family: $oswald-ff;\r\n        font-size: 2.2rem;\r\n        padding: 4.5rem 6rem;\r\n        word-spacing: 4px;\r\n        letter-spacing: 2px;\r\n        color: $link-color;\r\n        text-align: center;\r\n\r\n        &::first-letter {\r\n            text-transform: capitalize;\r\n        }\r\n\r\n        @include media-break-point(mobile) {\r\n            padding-top: 2rem;\r\n            padding-bottom: 2rem;\r\n        };\r\n\r\n        @include media-break-point(mobile-h) {\r\n            padding-top: 1.3rem;\r\n            padding-bottom: 1.3rem;\r\n        };\r\n    }\r\n\r\n    &__active {\r\n        &::before {\r\n            content: \"\";\r\n            @include position(absolute, 0px 0px 0px null);\r\n            width: 4px;\r\n            margin: 1rem 2rem;\r\n            background-color: $link-color;\r\n\r\n            @include media-break-point(mobile) {\r\n                @include position(absolute, 0px 0px 0px 0px);\r\n                height: 4px;\r\n                width: 80%;\r\n                margin: auto;\r\n                margin-bottom: 0px;\r\n            };\r\n\r\n            @include media-break-point(mobile-h) {\r\n                @include position(absolute, 0px 0px 0px 0px);\r\n                height: 4px;\r\n                width: 80%;\r\n                margin: auto;\r\n                margin-bottom: 0px;\r\n            };\r\n        }\r\n    }\r\n\r\n    &__img-box {\r\n        width: 6rem;\r\n        height: 6rem;\r\n        margin: 2rem 0px;\r\n\r\n        @include media-break-point(mobile) {\r\n            width: 4rem;\r\n            height: 4rem;\r\n            margin: 1.25rem 2.5rem;\r\n        };\r\n\r\n        @include media-break-point(mobile-h) {\r\n            width: 4rem;\r\n            height: 4rem;\r\n            margin: 1.25rem 2.5rem;\r\n        };\r\n    }\r\n\r\n    &__img {\r\n        display: block;\r\n        margin: auto;\r\n        width: auto;\r\n        \r\n        @if lightness($footer-bg-color) < 50 {\r\n            filter: invert(100%);\r\n        }\r\n    }\r\n\r\n    &__social {\r\n        display: flex;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        justify-content: flex-start;\r\n\r\n        @include media-break-point(mobile) {\r\n            flex-direction: row;\r\n            flex-wrap: wrap;\r\n            justify-content: center;\r\n            margin-top: 3.5rem;\r\n            margin-bottom: 2rem;\r\n        };\r\n\r\n        @include media-break-point(mobile-h) {\r\n            flex-direction: row;\r\n            flex-wrap: wrap;\r\n            justify-content: center;\r\n            margin-top: 3.5rem;\r\n            margin-bottom: 3rem;\r\n        };\r\n    }\r\n\r\n    &__input:checked + .sidebar__footer {\r\n        transform: translateX(0px);\r\n        transition: $ts;\r\n        transition-duration: .7s;\r\n        box-shadow: 0px 0px 0px 1000vh rgba(0, 0, 0, 0.7);\r\n    }\r\n}",
		".l-projects {\r\n    --grid-item-width: 35rem;\r\n    --grid-gap: 2rem;\r\n\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, var(--grid-item-width));\r\n    align-items: center;\r\n    justify-content: center;\r\n    grid-gap: var(--grid-gap);\r\n\r\n    justify-items: center;\r\n    perspective: 1000px;\r\n\r\n    @include media-break-point(tablet) {\r\n        --grid-item-width: 51em;\r\n    };\r\n\r\n    @include media-break-point(mobile) {\r\n        display: block;\r\n    };\r\n}",
		".form {\r\n    width: 100%;\r\n    max-width: 700px;\r\n    margin: auto;\r\n    padding-bottom: 80;\r\n\r\n    &__container {\r\n        display: grid;\r\n        grid-template-areas: \"name email btn\";\r\n\r\n        align-items: center;\r\n        justify-content: stretch;\r\n        grid-gap: 1rem;\r\n\r\n        @include media-break-point(tablet) {\r\n            grid-template-areas: \r\n                \"btn btn\"\r\n                \"name email\";\r\n            grid-row-gap: 4rem;\r\n        };\r\n\r\n        @include media-break-point(mobile) {\r\n            grid-template-areas: \r\n                \"btn\"\r\n                \"name\"\r\n                \"email\";\r\n            grid-row-gap: 4rem;\r\n        };\r\n    }\r\n\r\n    &__name {\r\n        grid-area: name;\r\n        width: auto;\r\n    }\r\n\r\n    &__email {\r\n        grid-area: email;\r\n        width: auto;\r\n    }\r\n\r\n    &__btn {\r\n        display: block;\r\n        width: auto;\r\n        grid-area: btn;\r\n        margin: 0px;\r\n    }\r\n}",
		"$bg-color: map-get($footer, bg-color);\r\n$font-color: map-get($footer, font-color);\r\n\r\n.footer {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: -1;\r\n    user-select: all;\r\n\r\n    &::after {\r\n        content: \"\";\r\n        @include position(absolute, 0px 0px 0px 0px);\r\n        background-color: $bg-color;\r\n        @include gradient(linear, 90deg, \r\n                    $bg-color 5%, \r\n                    is-light($bg-color,\r\n                        tint($bg-color, 10%),\r\n                        shade($bg-color, 10%)) 15%, \r\n                    is-light($bg-color,\r\n                        tint($bg-color, 10%),\r\n                        shade($bg-color, 10%)) 85%, \r\n                    $bg-color 95%);\r\n\r\n        z-index: -1;\r\n    }\r\n\r\n    &__flex-box {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    &__text {\r\n        color: $font-color;    \r\n        text-transform: uppercase;\r\n        font-family: $oswald-ff;\r\n        font-size: 1.8rem;\r\n        letter-spacing: 3px;\r\n        padding: 1.5rem;\r\n        padding-left: 2rem;\r\n        padding-right: 2rem;\r\n        cursor: text;\r\n\r\n        &:not(:last-child) {\r\n            &::before {\r\n                content: \"\";\r\n                @include position(absolute, 0px -.2rem 0px 100%);\r\n                transform: translateX(-50%);\r\n                margin-top: 0.75rem;\r\n                margin-bottom: 0.75rem;\r\n                background-color: map-get($footer, font-color);\r\n            }\r\n        }\r\n    }\r\n}"
	],
	"mappings": "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",
	"names": []
}